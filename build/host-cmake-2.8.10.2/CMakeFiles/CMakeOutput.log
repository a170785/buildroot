The system is: Linux - 3.11.0-12-generic - i686
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: /usr/bin/gcc 
Build flags: -O2;-I/home/aav/specter/buildroot-2013.08/output/host/usr/include
Id flags: 

The output was:
0


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"

The C compiler identification is GNU, found in "/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/2.8.10.2/CompilerIdC/a.out"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: 

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"

The CXX compiler identification is GNU, found in "/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/2.8.10.2/CompilerIdCXX/a.out"

Determining if the C compiler works passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2647379380/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2647379380.dir/build.make CMakeFiles/cmTryCompileExec2647379380.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2647379380.dir/testCCompiler.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2647379380.dir/testCCompiler.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTryCompileExec2647379380
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2647379380.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2647379380.dir/testCCompiler.c.o  -o cmTryCompileExec2647379380 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Detecting C compiler ABI info compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec956446996/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec956446996.dir/build.make CMakeFiles/cmTryCompileExec956446996.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CMakeCCompilerABI.c
Linking C executable cmTryCompileExec956446996
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec956446996.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include     -v CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o  -o cmTryCompileExec956446996 -rdynamic  
Using built-in specs.
COLLECT_GCC=/usr/bin/gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/i686-linux-gnu/4.8/lto-wrapper
Target: i686-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu/Linaro 4.8.1-10ubuntu9' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-i386 --with-arch-directory=i386 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-targets=all --enable-multiarch --disable-werror --with-arch-32=i686 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=i686-linux-gnu --host=i686-linux-gnu --target=i686-linux-gnu
Thread model: posix
gcc version 4.8.1 (Ubuntu/Linaro 4.8.1-10ubuntu9) 
COMPILER_PATH=/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/:/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib/:/lib/i386-linux-gnu/:/lib/../lib/:/usr/lib/i386-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-O2' '-I' '/home/aav/specter/buildroot-2013.08/output/host/usr/include' '-v' '-o' 'cmTryCompileExec956446996' '-rdynamic' '-mtune=generic' '-march=i686'
 /usr/lib/gcc/i686-linux-gnu/4.8/collect2 --sysroot=/ --build-id --eh-frame-hdr -m elf_i386 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib/ld-linux.so.2 -z relro -o cmTryCompileExec956446996 /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crt1.o /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crti.o /usr/lib/gcc/i686-linux-gnu/4.8/crtbegin.o -L/usr/lib/gcc/i686-linux-gnu/4.8 -L/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu -L/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib -L/lib/i386-linux-gnu -L/lib/../lib -L/usr/lib/i386-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/i686-linux-gnu/4.8/../../.. CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/i686-linux-gnu/4.8/crtend.o /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crtn.o
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Parsed C implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command:/usr/bin/make "cmTryCompileExec956446996/fast"]
  ignore line: [make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp']
  ignore line: [make -f CMakeFiles/cmTryCompileExec956446996.dir/build.make CMakeFiles/cmTryCompileExec956446996.dir/build]
  ignore line: [make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp']
  ignore line: [/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1]
  ignore line: [Building C object CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o]
  ignore line: [/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CMakeCCompilerABI.c]
  ignore line: [Linking C executable cmTryCompileExec956446996]
  ignore line: [/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec956446996.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include     -v CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o  -o cmTryCompileExec956446996 -rdynamic  ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/gcc]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/i686-linux-gnu/4.8/lto-wrapper]
  ignore line: [Target: i686-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu/Linaro 4.8.1-10ubuntu9' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-i386 --with-arch-directory=i386 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-targets=all --enable-multiarch --disable-werror --with-arch-32=i686 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=i686-linux-gnu --host=i686-linux-gnu --target=i686-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 4.8.1 (Ubuntu/Linaro 4.8.1-10ubuntu9) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/:/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib/:/lib/i386-linux-gnu/:/lib/../lib/:/usr/lib/i386-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-O2' '-I' '/home/aav/specter/buildroot-2013.08/output/host/usr/include' '-v' '-o' 'cmTryCompileExec956446996' '-rdynamic' '-mtune=generic' '-march=i686']
  link line: [ /usr/lib/gcc/i686-linux-gnu/4.8/collect2 --sysroot=/ --build-id --eh-frame-hdr -m elf_i386 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib/ld-linux.so.2 -z relro -o cmTryCompileExec956446996 /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crt1.o /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crti.o /usr/lib/gcc/i686-linux-gnu/4.8/crtbegin.o -L/usr/lib/gcc/i686-linux-gnu/4.8 -L/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu -L/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib -L/lib/i386-linux-gnu -L/lib/../lib -L/usr/lib/i386-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/i686-linux-gnu/4.8/../../.. CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib/gcc/i686-linux-gnu/4.8/crtend.o /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/collect2] ==> ignore
    arg [--sysroot=/] ==> ignore
    arg [--build-id] ==> ignore
    arg [--eh-frame-hdr] ==> ignore
    arg [-m] ==> ignore
    arg [elf_i386] ==> ignore
    arg [--hash-style=gnu] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-export-dynamic] ==> ignore
    arg [-dynamic-linker] ==> ignore
    arg [/lib/ld-linux.so.2] ==> ignore
    arg [-zrelro] ==> ignore
    arg [-o] ==> ignore
    arg [cmTryCompileExec956446996] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crt1.o] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crti.o] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/crtbegin.o] ==> ignore
    arg [-L/usr/lib/gcc/i686-linux-gnu/4.8] ==> dir [/usr/lib/gcc/i686-linux-gnu/4.8]
    arg [-L/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu] ==> dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu]
    arg [-L/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib] ==> dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib]
    arg [-L/lib/i386-linux-gnu] ==> dir [/lib/i386-linux-gnu]
    arg [-L/lib/../lib] ==> dir [/lib/../lib]
    arg [-L/usr/lib/i386-linux-gnu] ==> dir [/usr/lib/i386-linux-gnu]
    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/i686-linux-gnu/4.8/../../..] ==> dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../..]
    arg [CMakeFiles/cmTryCompileExec956446996.dir/CMakeCCompilerABI.c.o] ==> ignore
    arg [-lgcc] ==> lib [gcc]
    arg [--as-needed] ==> ignore
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [--no-as-needed] ==> ignore
    arg [-lc] ==> lib [c]
    arg [-lgcc] ==> lib [gcc]
    arg [--as-needed] ==> ignore
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [--no-as-needed] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/crtend.o] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crtn.o] ==> ignore
  remove lib [gcc]
  remove lib [gcc_s]
  remove lib [gcc]
  remove lib [gcc_s]
  collapse dir [/usr/lib/gcc/i686-linux-gnu/4.8] ==> [/usr/lib/gcc/i686-linux-gnu/4.8]
  collapse dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu] ==> [/usr/lib/i386-linux-gnu]
  collapse dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib] ==> [/usr/lib]
  collapse dir [/lib/i386-linux-gnu] ==> [/lib/i386-linux-gnu]
  collapse dir [/lib/../lib] ==> [/lib]
  collapse dir [/usr/lib/i386-linux-gnu] ==> [/usr/lib/i386-linux-gnu]
  collapse dir [/usr/lib/../lib] ==> [/usr/lib]
  collapse dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../..] ==> [/usr/lib]
  implicit libs: [c]
  implicit dirs: [/usr/lib/gcc/i686-linux-gnu/4.8;/usr/lib/i386-linux-gnu;/usr/lib;/lib/i386-linux-gnu;/lib]


Determining if the CXX compiler works passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec788404002/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec788404002.dir/build.make CMakeFiles/cmTryCompileExec788404002.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec788404002.dir/testCXXCompiler.cxx.o
/usr/bin/g++     -o CMakeFiles/cmTryCompileExec788404002.dir/testCXXCompiler.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
Linking CXX executable cmTryCompileExec788404002
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec788404002.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec788404002.dir/testCXXCompiler.cxx.o  -o cmTryCompileExec788404002 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Detecting CXX compiler ABI info compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1575569435/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1575569435.dir/build.make CMakeFiles/cmTryCompileExec1575569435.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o
/usr/bin/g++     -o CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CMakeCXXCompilerABI.cpp
Linking CXX executable cmTryCompileExec1575569435
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1575569435.dir/link.txt --verbose=1
/usr/bin/g++        -v CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o  -o cmTryCompileExec1575569435 -rdynamic  
Using built-in specs.
COLLECT_GCC=/usr/bin/g++
COLLECT_LTO_WRAPPER=/usr/lib/gcc/i686-linux-gnu/4.8/lto-wrapper
Target: i686-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu/Linaro 4.8.1-10ubuntu9' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-i386 --with-arch-directory=i386 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-targets=all --enable-multiarch --disable-werror --with-arch-32=i686 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=i686-linux-gnu --host=i686-linux-gnu --target=i686-linux-gnu
Thread model: posix
gcc version 4.8.1 (Ubuntu/Linaro 4.8.1-10ubuntu9) 
COMPILER_PATH=/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/:/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/
LIBRARY_PATH=/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib/:/lib/i386-linux-gnu/:/lib/../lib/:/usr/lib/i386-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec1575569435' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=i686'
 /usr/lib/gcc/i686-linux-gnu/4.8/collect2 --sysroot=/ --build-id --eh-frame-hdr -m elf_i386 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib/ld-linux.so.2 -z relro -o cmTryCompileExec1575569435 /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crt1.o /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crti.o /usr/lib/gcc/i686-linux-gnu/4.8/crtbegin.o -L/usr/lib/gcc/i686-linux-gnu/4.8 -L/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu -L/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib -L/lib/i386-linux-gnu -L/lib/../lib -L/usr/lib/i386-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/i686-linux-gnu/4.8/../../.. CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/i686-linux-gnu/4.8/crtend.o /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crtn.o
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Parsed CXX implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command:/usr/bin/make "cmTryCompileExec1575569435/fast"]
  ignore line: [make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp']
  ignore line: [make -f CMakeFiles/cmTryCompileExec1575569435.dir/build.make CMakeFiles/cmTryCompileExec1575569435.dir/build]
  ignore line: [make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp']
  ignore line: [/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1]
  ignore line: [Building CXX object CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o]
  ignore line: [/usr/bin/g++     -o CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [Linking CXX executable cmTryCompileExec1575569435]
  ignore line: [/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1575569435.dir/link.txt --verbose=1]
  ignore line: [/usr/bin/g++        -v CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o  -o cmTryCompileExec1575569435 -rdynamic  ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=/usr/bin/g++]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/i686-linux-gnu/4.8/lto-wrapper]
  ignore line: [Target: i686-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu/Linaro 4.8.1-10ubuntu9' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-i386 --with-arch-directory=i386 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-targets=all --enable-multiarch --disable-werror --with-arch-32=i686 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=i686-linux-gnu --host=i686-linux-gnu --target=i686-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 4.8.1 (Ubuntu/Linaro 4.8.1-10ubuntu9) ]
  ignore line: [COMPILER_PATH=/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/:/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/lib/gcc/i686-linux-gnu/4.8/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib/:/lib/i386-linux-gnu/:/lib/../lib/:/usr/lib/i386-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/i686-linux-gnu/4.8/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec1575569435' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=i686']
  link line: [ /usr/lib/gcc/i686-linux-gnu/4.8/collect2 --sysroot=/ --build-id --eh-frame-hdr -m elf_i386 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib/ld-linux.so.2 -z relro -o cmTryCompileExec1575569435 /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crt1.o /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crti.o /usr/lib/gcc/i686-linux-gnu/4.8/crtbegin.o -L/usr/lib/gcc/i686-linux-gnu/4.8 -L/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu -L/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib -L/lib/i386-linux-gnu -L/lib/../lib -L/usr/lib/i386-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/i686-linux-gnu/4.8/../../.. CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/i686-linux-gnu/4.8/crtend.o /usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/collect2] ==> ignore
    arg [--sysroot=/] ==> ignore
    arg [--build-id] ==> ignore
    arg [--eh-frame-hdr] ==> ignore
    arg [-m] ==> ignore
    arg [elf_i386] ==> ignore
    arg [--hash-style=gnu] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-export-dynamic] ==> ignore
    arg [-dynamic-linker] ==> ignore
    arg [/lib/ld-linux.so.2] ==> ignore
    arg [-zrelro] ==> ignore
    arg [-o] ==> ignore
    arg [cmTryCompileExec1575569435] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crt1.o] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crti.o] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/crtbegin.o] ==> ignore
    arg [-L/usr/lib/gcc/i686-linux-gnu/4.8] ==> dir [/usr/lib/gcc/i686-linux-gnu/4.8]
    arg [-L/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu] ==> dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu]
    arg [-L/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib] ==> dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib]
    arg [-L/lib/i386-linux-gnu] ==> dir [/lib/i386-linux-gnu]
    arg [-L/lib/../lib] ==> dir [/lib/../lib]
    arg [-L/usr/lib/i386-linux-gnu] ==> dir [/usr/lib/i386-linux-gnu]
    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/i686-linux-gnu/4.8/../../..] ==> dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../..]
    arg [CMakeFiles/cmTryCompileExec1575569435.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
    arg [-lstdc++] ==> lib [stdc++]
    arg [-lm] ==> lib [m]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [-lc] ==> lib [c]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/crtend.o] ==> ignore
    arg [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu/crtn.o] ==> ignore
  remove lib [gcc_s]
  remove lib [gcc]
  remove lib [gcc_s]
  remove lib [gcc]
  collapse dir [/usr/lib/gcc/i686-linux-gnu/4.8] ==> [/usr/lib/gcc/i686-linux-gnu/4.8]
  collapse dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../../i386-linux-gnu] ==> [/usr/lib/i386-linux-gnu]
  collapse dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../../../lib] ==> [/usr/lib]
  collapse dir [/lib/i386-linux-gnu] ==> [/lib/i386-linux-gnu]
  collapse dir [/lib/../lib] ==> [/lib]
  collapse dir [/usr/lib/i386-linux-gnu] ==> [/usr/lib/i386-linux-gnu]
  collapse dir [/usr/lib/../lib] ==> [/usr/lib]
  collapse dir [/usr/lib/gcc/i686-linux-gnu/4.8/../../..] ==> [/usr/lib]
  implicit libs: [stdc++;m;c]
  implicit dirs: [/usr/lib/gcc/i686-linux-gnu/4.8;/usr/lib/i386-linux-gnu;/usr/lib;/lib/i386-linux-gnu;/lib]


Determining if the include file iostream exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2780385521/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2780385521.dir/build.make CMakeFiles/cmTryCompileExec2780385521.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2780385521.dir/CheckIncludeFile.cxx.o
/usr/bin/g++     -o CMakeFiles/cmTryCompileExec2780385521.dir/CheckIncludeFile.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFile.cxx
Linking CXX executable cmTryCompileExec2780385521
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2780385521.dir/link.txt --verbose=1
/usr/bin/g++          -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2780385521.dir/CheckIncludeFile.cxx.o  -o cmTryCompileExec2780385521 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the CXX compiler has std namespace passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2263501204/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2263501204.dir/build.make CMakeFiles/cmTryCompileExec2263501204.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2263501204.dir/TestForSTDNamespace.cxx.o
/usr/bin/g++     -o CMakeFiles/cmTryCompileExec2263501204.dir/TestForSTDNamespace.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/TestForSTDNamespace.cxx
Linking CXX executable cmTryCompileExec2263501204
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2263501204.dir/link.txt --verbose=1
/usr/bin/g++          -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2263501204.dir/TestForSTDNamespace.cxx.o  -o cmTryCompileExec2263501204 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the CXX compiler understands ansi for scopes passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3280546224/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3280546224.dir/build.make CMakeFiles/cmTryCompileExec3280546224.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec3280546224.dir/TestForAnsiForScope.cxx.o
/usr/bin/g++     -o CMakeFiles/cmTryCompileExec3280546224.dir/TestForAnsiForScope.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/TestForAnsiForScope.cxx
Linking CXX executable cmTryCompileExec3280546224
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3280546224.dir/link.txt --verbose=1
/usr/bin/g++          -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3280546224.dir/TestForAnsiForScope.cxx.o  -o cmTryCompileExec3280546224 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the CXX compiler has sstream passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1855478381/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1855478381.dir/build.make CMakeFiles/cmTryCompileExec1855478381.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec1855478381.dir/TestForSSTREAM.cxx.o
/usr/bin/g++     -o CMakeFiles/cmTryCompileExec1855478381.dir/TestForSSTREAM.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/TestForSSTREAM.cxx
Linking CXX executable cmTryCompileExec1855478381
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1855478381.dir/link.txt --verbose=1
/usr/bin/g++          -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1855478381.dir/TestForSSTREAM.cxx.o  -o cmTryCompileExec1855478381 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the unsetenv exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1294115018/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1294115018.dir/build.make CMakeFiles/cmTryCompileExec1294115018.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1294115018.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1294115018.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1294115018
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1294115018.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1294115018.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1294115018 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdlib.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef unsetenv
  return ((int*)(&unsetenv))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Checking whether header cstdio is available compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1496197578/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1496197578.dir/build.make CMakeFiles/cmTryCompileExec1496197578.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec1496197578.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CXX_HAS_CSTDIO  -o CMakeFiles/cmTryCompileExec1496197578.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec1496197578
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1496197578.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1496197578.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec1496197578 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking for Large File Support compiled and ran with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec118216983/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec118216983.dir/build.make CMakeFiles/cmTryCompileExec118216983.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec118216983.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_CXX_HAS_CSTDIO=1 -DTEST_KWSYS_LFS_WORKS  -o CMakeFiles/cmTryCompileExec118216983.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec118216983
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec118216983.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec118216983.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec118216983 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether STL classes are in std namespace compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3303109642/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3303109642.dir/build.make CMakeFiles/cmTryCompileExec3303109642.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec3303109642.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_STL_HAVE_STD  -o CMakeFiles/cmTryCompileExec3303109642.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec3303109642
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3303109642.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3303109642.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec3303109642 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether ANSI stream headers are available compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2313368391/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2313368391.dir/build.make CMakeFiles/cmTryCompileExec2313368391.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2313368391.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_IOS_USE_ANSI  -o CMakeFiles/cmTryCompileExec2313368391.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec2313368391
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2313368391.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2313368391.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec2313368391 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether ANSI streams are in std namespace compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1895947143/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1895947143.dir/build.make CMakeFiles/cmTryCompileExec1895947143.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec1895947143.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_IOS_HAVE_STD  -o CMakeFiles/cmTryCompileExec1895947143.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec1895947143
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1895947143.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1895947143.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec1895947143 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether ANSI string stream is available compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec141982403/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec141982403.dir/build.make CMakeFiles/cmTryCompileExec141982403.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec141982403.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_IOS_USE_SSTREAM  -o CMakeFiles/cmTryCompileExec141982403.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec141982403
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec141982403.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec141982403.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec141982403 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether header cstddef is available compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec357802187/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec357802187.dir/build.make CMakeFiles/cmTryCompileExec357802187.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec357802187.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CXX_HAS_CSTDDEF  -o CMakeFiles/cmTryCompileExec357802187.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec357802187
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec357802187.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec357802187.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec357802187 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether stl string has operator!= for char* compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec56107598/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec56107598.dir/build.make CMakeFiles/cmTryCompileExec56107598.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec56107598.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_STL_HAVE_STD=1 -DTEST_KWSYS_STL_STRING_HAVE_NEQ_CHAR  -o CMakeFiles/cmTryCompileExec56107598.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec56107598
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec56107598.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec56107598.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec56107598 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether stl has iterator_traits compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4107914440/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4107914440.dir/build.make CMakeFiles/cmTryCompileExec4107914440.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec4107914440.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_STL_HAVE_STD=1 -DTEST_KWSYS_STL_HAS_ITERATOR_TRAITS  -o CMakeFiles/cmTryCompileExec4107914440.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec4107914440
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4107914440.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4107914440.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec4107914440 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether stl has standard template allocator compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1834730843/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1834730843.dir/build.make CMakeFiles/cmTryCompileExec1834730843.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec1834730843.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_STL_HAVE_STD=1 -DTEST_KWSYS_STL_HAS_ALLOCATOR_TEMPLATE  -o CMakeFiles/cmTryCompileExec1834730843.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec1834730843
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1834730843.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1834730843.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec1834730843 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking for rebind member of stl allocator compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2398108290/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2398108290.dir/build.make CMakeFiles/cmTryCompileExec2398108290.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2398108290.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_STL_HAVE_STD=1 -DTEST_KWSYS_STL_HAS_ALLOCATOR_REBIND  -o CMakeFiles/cmTryCompileExec2398108290.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec2398108290
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2398108290.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2398108290.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec2398108290 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether stl containers support allocator objects. compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3236305984/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3236305984.dir/build.make CMakeFiles/cmTryCompileExec3236305984.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec3236305984.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_STL_HAVE_STD=1 -DTEST_KWSYS_STL_HAS_ALLOCATOR_OBJECTS  -o CMakeFiles/cmTryCompileExec3236305984.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec3236305984
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3236305984.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3236305984.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec3236305984 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether ios has binary openmode compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec540348576/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec540348576.dir/build.make CMakeFiles/cmTryCompileExec540348576.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec540348576.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_IOS_HAVE_STD=1 -DKWSYS_IOS_USE_ANSI=1 -DTEST_KWSYS_IOS_HAVE_BINARY  -o CMakeFiles/cmTryCompileExec540348576.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec540348576
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec540348576.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec540348576.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec540348576 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking for member template support compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec392857154/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec392857154.dir/build.make CMakeFiles/cmTryCompileExec392857154.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec392857154.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CXX_HAS_MEMBER_TEMPLATES  -o CMakeFiles/cmTryCompileExec392857154.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec392857154
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec392857154.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec392857154.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec392857154 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking for standard template specialization syntax compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4217727617/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4217727617.dir/build.make CMakeFiles/cmTryCompileExec4217727617.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec4217727617.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CXX_HAS_FULL_SPECIALIZATION  -o CMakeFiles/cmTryCompileExec4217727617.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec4217727617
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4217727617.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4217727617.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec4217727617 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether argument dependent lookup is supported compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1724135532/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1724135532.dir/build.make CMakeFiles/cmTryCompileExec1724135532.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec1724135532.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CXX_HAS_ARGUMENT_DEPENDENT_LOOKUP  -o CMakeFiles/cmTryCompileExec1724135532.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec1724135532
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1724135532.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1724135532.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec1724135532 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether struct stat has st_mtim member compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1746100878/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1746100878.dir/build.make CMakeFiles/cmTryCompileExec1746100878.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec1746100878.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_STAT_HAS_ST_MTIM  -o CMakeFiles/cmTryCompileExec1746100878.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec1746100878
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1746100878.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1746100878.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec1746100878 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether C++ compiler has 'long long' compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3189573995/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3189573995.dir/build.make CMakeFiles/cmTryCompileExec3189573995.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec3189573995.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CXX_HAS_LONG_LONG  -o CMakeFiles/cmTryCompileExec3189573995.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec3189573995
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3189573995.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3189573995.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec3189573995 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking for C type size macros compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec516945048/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec516945048.dir/build.make CMakeFiles/cmTryCompileExec516945048.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec516945048.dir/kwsysPlatformTestsC.c.o
/usr/bin/gcc  -DTEST_KWSYS_C_TYPE_MACROS -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec516945048.dir/kwsysPlatformTestsC.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsC.c
Linking C executable cmTryCompileExec516945048
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec516945048.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec516945048.dir/kwsysPlatformTestsC.c.o  -o cmTryCompileExec516945048 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Determining if the include file sys/types.h exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3765325146/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3765325146.dir/build.make CMakeFiles/cmTryCompileExec3765325146.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3765325146.dir/CheckIncludeFile.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3765325146.dir/CheckIncludeFile.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTryCompileExec3765325146
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3765325146.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3765325146.dir/CheckIncludeFile.c.o  -o cmTryCompileExec3765325146 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the include file stdint.h exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1266007625/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1266007625.dir/build.make CMakeFiles/cmTryCompileExec1266007625.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1266007625.dir/CheckIncludeFile.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1266007625.dir/CheckIncludeFile.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTryCompileExec1266007625
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1266007625.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1266007625.dir/CheckIncludeFile.c.o  -o cmTryCompileExec1266007625 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the include file stddef.h exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec621493163/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec621493163.dir/build.make CMakeFiles/cmTryCompileExec621493163.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec621493163.dir/CheckIncludeFile.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec621493163.dir/CheckIncludeFile.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTryCompileExec621493163
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec621493163.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec621493163.dir/CheckIncludeFile.c.o  -o cmTryCompileExec621493163 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of char passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2150441284/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2150441284.dir/build.make CMakeFiles/cmTryCompileExec2150441284.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2150441284.dir/KWSYS_SIZEOF_CHAR.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2150441284.dir/KWSYS_SIZEOF_CHAR.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/KWSYS_SIZEOF_CHAR.c
Linking C executable cmTryCompileExec2150441284
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2150441284.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2150441284.dir/KWSYS_SIZEOF_CHAR.c.o  -o cmTryCompileExec2150441284 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Checking whether char is signed compiled and ran with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2809376800/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2809376800.dir/build.make CMakeFiles/cmTryCompileExec2809376800.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2809376800.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CHAR_IS_SIGNED  -o CMakeFiles/cmTryCompileExec2809376800.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec2809376800
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2809376800.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2809376800.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec2809376800 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking if istream supports long long compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2890096731/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2890096731.dir/build.make CMakeFiles/cmTryCompileExec2890096731.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2890096731.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_IOS_HAVE_STD=1 -DKWSYS_IOS_USE_ANSI=1 -DTEST_KWSYS_IOS_HAS_ISTREAM_LONG_LONG  -o CMakeFiles/cmTryCompileExec2890096731.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec2890096731
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2890096731.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2890096731.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec2890096731 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking if ostream supports long long compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3643047378/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3643047378.dir/build.make CMakeFiles/cmTryCompileExec3643047378.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec3643047378.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DKWSYS_IOS_HAVE_STD=1 -DKWSYS_IOS_USE_ANSI=1 -DTEST_KWSYS_IOS_HAS_OSTREAM_LONG_LONG  -o CMakeFiles/cmTryCompileExec3643047378.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec3643047378
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3643047378.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3643047378.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec3643047378 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether C compiler has ptrdiff_t in stddef.h compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec438259622/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec438259622.dir/build.make CMakeFiles/cmTryCompileExec438259622.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec438259622.dir/kwsysPlatformTestsC.c.o
/usr/bin/gcc  -DTEST_KWSYS_C_HAS_PTRDIFF_T -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec438259622.dir/kwsysPlatformTestsC.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsC.c
Linking C executable cmTryCompileExec438259622
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec438259622.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec438259622.dir/kwsysPlatformTestsC.c.o  -o cmTryCompileExec438259622 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether C compiler has ssize_t in unistd.h compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2594016862/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2594016862.dir/build.make CMakeFiles/cmTryCompileExec2594016862.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2594016862.dir/kwsysPlatformTestsC.c.o
/usr/bin/gcc  -DTEST_KWSYS_C_HAS_SSIZE_T -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2594016862.dir/kwsysPlatformTestsC.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsC.c
Linking C executable cmTryCompileExec2594016862
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2594016862.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2594016862.dir/kwsysPlatformTestsC.c.o  -o cmTryCompileExec2594016862 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether CXX compiler has setenv compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2503259740/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2503259740.dir/build.make CMakeFiles/cmTryCompileExec2503259740.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2503259740.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CXX_HAS_SETENV  -o CMakeFiles/cmTryCompileExec2503259740.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec2503259740
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2503259740.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2503259740.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec2503259740 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Checking whether CXX compiler has unsetenv compiled with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2423199302/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2423199302.dir/build.make CMakeFiles/cmTryCompileExec2423199302.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2423199302.dir/kwsysPlatformTestsCXX.cxx.o
/usr/bin/g++   -DTEST_KWSYS_CXX_HAS_UNSETENV  -o CMakeFiles/cmTryCompileExec2423199302.dir/kwsysPlatformTestsCXX.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/kwsysPlatformTestsCXX.cxx
Linking CXX executable cmTryCompileExec2423199302
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2423199302.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2423199302.dir/kwsysPlatformTestsCXX.cxx.o  -o cmTryCompileExec2423199302 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Source/kwsys/CMakeFiles/CMakeTmp'


Determining if the function gethostbyname exists in the c passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3538334080/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3538334080.dir/build.make CMakeFiles/cmTryCompileExec3538334080.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3538334080.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DCHECK_FUNCTION_EXISTS=gethostbyname   -o CMakeFiles/cmTryCompileExec3538334080.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3538334080
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3538334080.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DCHECK_FUNCTION_EXISTS=gethostbyname   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3538334080.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3538334080 -rdynamic -lc 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function dlopen exists in the dl passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2771926161/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2771926161.dir/build.make CMakeFiles/cmTryCompileExec2771926161.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2771926161.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DCHECK_FUNCTION_EXISTS=dlopen   -o CMakeFiles/cmTryCompileExec2771926161.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2771926161
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2771926161.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DCHECK_FUNCTION_EXISTS=dlopen   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2771926161.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2771926161 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the include file features.h exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2530004612/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2530004612.dir/build.make CMakeFiles/cmTryCompileExec2530004612.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2530004612.dir/CheckIncludeFile.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2530004612.dir/CheckIncludeFile.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTryCompileExec2530004612
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2530004612.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2530004612.dir/CheckIncludeFile.c.o  -o cmTryCompileExec2530004612 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files ;stdio.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3236900266/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3236900266.dir/build.make CMakeFiles/cmTryCompileExec3236900266.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3236900266.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3236900266.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3236900266
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3236900266.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3236900266.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3236900266 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2173454958/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2173454958.dir/build.make CMakeFiles/cmTryCompileExec2173454958.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2173454958.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2173454958.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2173454958
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2173454958.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2173454958.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2173454958 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1906244719/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1906244719.dir/build.make CMakeFiles/cmTryCompileExec1906244719.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1906244719.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1906244719.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1906244719
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1906244719.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1906244719.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1906244719 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1320611688/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1320611688.dir/build.make CMakeFiles/cmTryCompileExec1320611688.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1320611688.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1320611688.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1320611688
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1320611688.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1320611688.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1320611688 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec614662041/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec614662041.dir/build.make CMakeFiles/cmTryCompileExec614662041.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec614662041.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec614662041.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec614662041
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec614662041.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec614662041.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec614662041 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3491883442/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3491883442.dir/build.make CMakeFiles/cmTryCompileExec3491883442.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3491883442.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3491883442.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3491883442
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3491883442.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3491883442.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3491883442 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1523247578/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1523247578.dir/build.make CMakeFiles/cmTryCompileExec1523247578.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1523247578.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1523247578.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1523247578
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1523247578.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1523247578.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1523247578 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4213186763/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4213186763.dir/build.make CMakeFiles/cmTryCompileExec4213186763.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4213186763.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec4213186763.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec4213186763
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4213186763.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4213186763.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec4213186763 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2726856021/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2726856021.dir/build.make CMakeFiles/cmTryCompileExec2726856021.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2726856021.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2726856021.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2726856021
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2726856021.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2726856021.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2726856021 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2331260575/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2331260575.dir/build.make CMakeFiles/cmTryCompileExec2331260575.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2331260575.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2331260575.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2331260575
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2331260575.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2331260575.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2331260575 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2553001503/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2553001503.dir/build.make CMakeFiles/cmTryCompileExec2553001503.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2553001503.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2553001503.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2553001503
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2553001503.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2553001503.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2553001503 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2795455359/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2795455359.dir/build.make CMakeFiles/cmTryCompileExec2795455359.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2795455359.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2795455359.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2795455359
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2795455359.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2795455359.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2795455359 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec857285129/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec857285129.dir/build.make CMakeFiles/cmTryCompileExec857285129.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec857285129.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec857285129.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec857285129
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec857285129.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec857285129.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec857285129 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec375787147/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec375787147.dir/build.make CMakeFiles/cmTryCompileExec375787147.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec375787147.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec375787147.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec375787147
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec375787147.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec375787147.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec375787147 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec234234929/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec234234929.dir/build.make CMakeFiles/cmTryCompileExec234234929.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec234234929.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec234234929.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec234234929
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec234234929.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec234234929.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec234234929 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3325354758/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3325354758.dir/build.make CMakeFiles/cmTryCompileExec3325354758.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3325354758.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3325354758.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3325354758
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3325354758.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3325354758.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3325354758 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1200185979/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1200185979.dir/build.make CMakeFiles/cmTryCompileExec1200185979.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1200185979.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1200185979.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1200185979
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1200185979.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1200185979.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1200185979 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2754606660/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2754606660.dir/build.make CMakeFiles/cmTryCompileExec2754606660.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2754606660.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2754606660.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2754606660
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2754606660.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2754606660.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2754606660 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec542005112/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec542005112.dir/build.make CMakeFiles/cmTryCompileExec542005112.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec542005112.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec542005112.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec542005112
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec542005112.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec542005112.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec542005112 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1039541415/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1039541415.dir/build.make CMakeFiles/cmTryCompileExec1039541415.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1039541415.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1039541415.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1039541415
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1039541415.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1039541415.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1039541415 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3718101219/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3718101219.dir/build.make CMakeFiles/cmTryCompileExec3718101219.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3718101219.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3718101219.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3718101219
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3718101219.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3718101219.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3718101219 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2858029057/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2858029057.dir/build.make CMakeFiles/cmTryCompileExec2858029057.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2858029057.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2858029057.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2858029057
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2858029057.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2858029057.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2858029057 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3353178713/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3353178713.dir/build.make CMakeFiles/cmTryCompileExec3353178713.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3353178713.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3353178713.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3353178713
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3353178713.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3353178713.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3353178713 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2273593999/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2273593999.dir/build.make CMakeFiles/cmTryCompileExec2273593999.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2273593999.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2273593999.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2273593999
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2273593999.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2273593999.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2273593999 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2501879396/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2501879396.dir/build.make CMakeFiles/cmTryCompileExec2501879396.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2501879396.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2501879396.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2501879396
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2501879396.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2501879396.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2501879396 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2755229190/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2755229190.dir/build.make CMakeFiles/cmTryCompileExec2755229190.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2755229190.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2755229190.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2755229190
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2755229190.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2755229190.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2755229190 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1197747730/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1197747730.dir/build.make CMakeFiles/cmTryCompileExec1197747730.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1197747730.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1197747730.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1197747730
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1197747730.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1197747730.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1197747730 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3346065264/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3346065264.dir/build.make CMakeFiles/cmTryCompileExec3346065264.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3346065264.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3346065264.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3346065264
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3346065264.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3346065264.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3346065264 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2996198131/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2996198131.dir/build.make CMakeFiles/cmTryCompileExec2996198131.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2996198131.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2996198131.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2996198131
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2996198131.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2996198131.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2996198131 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1653838888/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1653838888.dir/build.make CMakeFiles/cmTryCompileExec1653838888.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1653838888.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1653838888.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1653838888
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1653838888.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1653838888.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1653838888 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1859910142/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1859910142.dir/build.make CMakeFiles/cmTryCompileExec1859910142.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1859910142.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1859910142.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1859910142
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1859910142.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1859910142.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1859910142 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3822075141/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3822075141.dir/build.make CMakeFiles/cmTryCompileExec3822075141.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3822075141.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3822075141.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3822075141
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3822075141.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3822075141.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3822075141 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h;locale.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec334928774/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec334928774.dir/build.make CMakeFiles/cmTryCompileExec334928774.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec334928774.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec334928774.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec334928774
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec334928774.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec334928774.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec334928774 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h;locale.h;setjmp.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3191633743/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3191633743.dir/build.make CMakeFiles/cmTryCompileExec3191633743.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3191633743.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3191633743.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3191633743
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3191633743.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3191633743.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3191633743 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h;locale.h;setjmp.h;signal.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2678025598/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2678025598.dir/build.make CMakeFiles/cmTryCompileExec2678025598.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2678025598.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2678025598.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2678025598
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2678025598.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2678025598.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2678025598 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h;locale.h;setjmp.h;signal.h;sys/ioctl.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec511639818/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec511639818.dir/build.make CMakeFiles/cmTryCompileExec511639818.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec511639818.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec511639818.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec511639818
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec511639818.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec511639818.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec511639818 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h;locale.h;setjmp.h;signal.h;sys/ioctl.h;sys/utsname.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2393040367/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2393040367.dir/build.make CMakeFiles/cmTryCompileExec2393040367.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2393040367.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2393040367.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2393040367
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2393040367.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2393040367.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2393040367 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h;locale.h;setjmp.h;signal.h;sys/ioctl.h;sys/utsname.h;arpa/tftp.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1447316670/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1447316670.dir/build.make CMakeFiles/cmTryCompileExec1447316670.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1447316670.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1447316670.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1447316670
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1447316670.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1447316670.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1447316670 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h;locale.h;setjmp.h;signal.h;sys/ioctl.h;sys/utsname.h;arpa/tftp.h;errno.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3240073230/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3240073230.dir/build.make CMakeFiles/cmTryCompileExec3240073230.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3240073230.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3240073230.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3240073230
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3240073230.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3240073230.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3240073230 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files stdio.h;stddef.h;sys/types.h;inttypes.h;alloca.h;arpa/inet.h;dlfcn.h;fcntl.h;malloc.h;memory.h;netdb.h;sys/poll.h;assert.h;limits.h;sys/socket.h;netinet/in.h;net/if.h;netinet/if_ether.h;netinet/tcp.h;sys/select.h;utime.h;netinet/in.h;pwd.h;sgtty.h;stdint.h;stdlib.h;string.h;strings.h;sys/param.h;sys/stat.h;sys/time.h;sys/resource.h;termios.h;termio.h;time.h;unistd.h;locale.h;setjmp.h;signal.h;sys/ioctl.h;sys/utsname.h;arpa/tftp.h;errno.h;libgen.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec849898250/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec849898250.dir/build.make CMakeFiles/cmTryCompileExec849898250.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec849898250.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec849898250.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec849898250
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec849898250.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec849898250.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec849898250 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of size_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1171330742/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1171330742.dir/build.make CMakeFiles/cmTryCompileExec1171330742.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1171330742.dir/SIZEOF_SIZE_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1171330742.dir/SIZEOF_SIZE_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c
Linking C executable cmTryCompileExec1171330742
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1171330742.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1171330742.dir/SIZEOF_SIZE_T.c.o  -o cmTryCompileExec1171330742 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of ssize_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3373696173/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3373696173.dir/build.make CMakeFiles/cmTryCompileExec3373696173.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3373696173.dir/SIZEOF_SSIZE_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3373696173.dir/SIZEOF_SSIZE_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_SSIZE_T.c
Linking C executable cmTryCompileExec3373696173
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3373696173.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3373696173.dir/SIZEOF_SSIZE_T.c.o  -o cmTryCompileExec3373696173 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of long long passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec8103701/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec8103701.dir/build.make CMakeFiles/cmTryCompileExec8103701.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec8103701.dir/SIZEOF_LONG_LONG.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec8103701.dir/SIZEOF_LONG_LONG.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_LONG_LONG.c
Linking C executable cmTryCompileExec8103701
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec8103701.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec8103701.dir/SIZEOF_LONG_LONG.c.o  -o cmTryCompileExec8103701 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of long passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec570128115/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec570128115.dir/build.make CMakeFiles/cmTryCompileExec570128115.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec570128115.dir/SIZEOF_LONG.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec570128115.dir/SIZEOF_LONG.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_LONG.c
Linking C executable cmTryCompileExec570128115
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec570128115.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec570128115.dir/SIZEOF_LONG.c.o  -o cmTryCompileExec570128115 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of time_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1448344965/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1448344965.dir/build.make CMakeFiles/cmTryCompileExec1448344965.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1448344965.dir/SIZEOF_TIME_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1448344965.dir/SIZEOF_TIME_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_TIME_T.c
Linking C executable cmTryCompileExec1448344965
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1448344965.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1448344965.dir/SIZEOF_TIME_T.c.o  -o cmTryCompileExec1448344965 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the basename exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3224285074/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3224285074.dir/build.make CMakeFiles/cmTryCompileExec3224285074.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3224285074.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3224285074.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3224285074
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3224285074.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3224285074.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3224285074 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef basename
  return ((int*)(&basename))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the socket exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec771113905/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec771113905.dir/build.make CMakeFiles/cmTryCompileExec771113905.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec771113905.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec771113905.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec771113905
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec771113905.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec771113905.dir/CheckSymbolExists.c.o  -o cmTryCompileExec771113905 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef socket
  return ((int*)(&socket))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the poll exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2389897166/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2389897166.dir/build.make CMakeFiles/cmTryCompileExec2389897166.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2389897166.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2389897166.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2389897166
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2389897166.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2389897166.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2389897166 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef poll
  return ((int*)(&poll))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the select exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1949213469/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1949213469.dir/build.make CMakeFiles/cmTryCompileExec1949213469.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1949213469.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1949213469.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1949213469
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1949213469.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1949213469.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1949213469 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef select
  return ((int*)(&select))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the strdup exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3536079937/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3536079937.dir/build.make CMakeFiles/cmTryCompileExec3536079937.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3536079937.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3536079937.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3536079937
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3536079937.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3536079937.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3536079937 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strdup
  return ((int*)(&strdup))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the strstr exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1521572352/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1521572352.dir/build.make CMakeFiles/cmTryCompileExec1521572352.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1521572352.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1521572352.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1521572352
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1521572352.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1521572352.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1521572352 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strstr
  return ((int*)(&strstr))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the strtok_r exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2795888332/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2795888332.dir/build.make CMakeFiles/cmTryCompileExec2795888332.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2795888332.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2795888332.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2795888332
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2795888332.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2795888332.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2795888332 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strtok_r
  return ((int*)(&strtok_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the strftime exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2873070789/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2873070789.dir/build.make CMakeFiles/cmTryCompileExec2873070789.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2873070789.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2873070789.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2873070789
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2873070789.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2873070789.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2873070789 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strftime
  return ((int*)(&strftime))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the uname exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1240617684/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1240617684.dir/build.make CMakeFiles/cmTryCompileExec1240617684.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1240617684.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1240617684.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1240617684
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1240617684.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1240617684.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1240617684 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef uname
  return ((int*)(&uname))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the strcasecmp exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec230919098/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec230919098.dir/build.make CMakeFiles/cmTryCompileExec230919098.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec230919098.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec230919098.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec230919098
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec230919098.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec230919098.dir/CheckSymbolExists.c.o  -o cmTryCompileExec230919098 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strcasecmp
  return ((int*)(&strcasecmp))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the gethostbyaddr exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec371526908/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec371526908.dir/build.make CMakeFiles/cmTryCompileExec371526908.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec371526908.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec371526908.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec371526908
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec371526908.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec371526908.dir/CheckSymbolExists.c.o  -o cmTryCompileExec371526908 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyaddr
  return ((int*)(&gethostbyaddr))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the gettimeofday exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec460509456/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec460509456.dir/build.make CMakeFiles/cmTryCompileExec460509456.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec460509456.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec460509456.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec460509456
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec460509456.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec460509456.dir/CheckSymbolExists.c.o  -o cmTryCompileExec460509456 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gettimeofday
  return ((int*)(&gettimeofday))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the inet_addr exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2830074905/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2830074905.dir/build.make CMakeFiles/cmTryCompileExec2830074905.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2830074905.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2830074905.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2830074905
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2830074905.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2830074905.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2830074905 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_addr
  return ((int*)(&inet_addr))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the inet_pton exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec827025125/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec827025125.dir/build.make CMakeFiles/cmTryCompileExec827025125.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec827025125.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec827025125.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec827025125
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec827025125.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec827025125.dir/CheckSymbolExists.c.o  -o cmTryCompileExec827025125 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_pton
  return ((int*)(&inet_pton))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the inet_ntoa exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1715510657/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1715510657.dir/build.make CMakeFiles/cmTryCompileExec1715510657.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1715510657.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1715510657.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1715510657
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1715510657.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1715510657.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1715510657 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef inet_ntoa
  return ((int*)(&inet_ntoa))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the tcsetattr exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2339999474/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2339999474.dir/build.make CMakeFiles/cmTryCompileExec2339999474.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2339999474.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2339999474.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2339999474
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2339999474.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2339999474.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2339999474 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef tcsetattr
  return ((int*)(&tcsetattr))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the tcgetattr exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3888990923/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3888990923.dir/build.make CMakeFiles/cmTryCompileExec3888990923.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3888990923.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3888990923.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3888990923
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3888990923.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3888990923.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3888990923 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef tcgetattr
  return ((int*)(&tcgetattr))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the perror exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec880474870/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec880474870.dir/build.make CMakeFiles/cmTryCompileExec880474870.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec880474870.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec880474870.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec880474870
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec880474870.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec880474870.dir/CheckSymbolExists.c.o  -o cmTryCompileExec880474870 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef perror
  return ((int*)(&perror))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the setvbuf exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3090544660/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3090544660.dir/build.make CMakeFiles/cmTryCompileExec3090544660.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3090544660.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3090544660.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3090544660
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3090544660.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3090544660.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3090544660 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setvbuf
  return ((int*)(&setvbuf))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the sigsetjmp exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1478818206/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1478818206.dir/build.make CMakeFiles/cmTryCompileExec1478818206.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1478818206.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1478818206.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1478818206
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1478818206.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1478818206.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1478818206 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef sigsetjmp
  return ((int*)(&sigsetjmp))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the getpwuid exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2731347442/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2731347442.dir/build.make CMakeFiles/cmTryCompileExec2731347442.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2731347442.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2731347442.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2731347442
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2731347442.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2731347442.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2731347442 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getpwuid
  return ((int*)(&getpwuid))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the geteuid exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec804923003/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec804923003.dir/build.make CMakeFiles/cmTryCompileExec804923003.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec804923003.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec804923003.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec804923003
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec804923003.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec804923003.dir/CheckSymbolExists.c.o  -o cmTryCompileExec804923003 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef geteuid
  return ((int*)(&geteuid))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the utime exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec466238116/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec466238116.dir/build.make CMakeFiles/cmTryCompileExec466238116.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec466238116.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec466238116.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec466238116
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec466238116.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec466238116.dir/CheckSymbolExists.c.o  -o cmTryCompileExec466238116 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef utime
  return ((int*)(&utime))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the gmtime_r exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3141451494/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3141451494.dir/build.make CMakeFiles/cmTryCompileExec3141451494.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3141451494.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3141451494.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3141451494
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3141451494.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3141451494.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3141451494 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gmtime_r
  return ((int*)(&gmtime_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the localtime_r exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec610685685/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec610685685.dir/build.make CMakeFiles/cmTryCompileExec610685685.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec610685685.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec610685685.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec610685685
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec610685685.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec610685685.dir/CheckSymbolExists.c.o  -o cmTryCompileExec610685685 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef localtime_r
  return ((int*)(&localtime_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the gethostbyname exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4013784061/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4013784061.dir/build.make CMakeFiles/cmTryCompileExec4013784061.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4013784061.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec4013784061.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec4013784061
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4013784061.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4013784061.dir/CheckSymbolExists.c.o  -o cmTryCompileExec4013784061 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyname
  return ((int*)(&gethostbyname))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the gethostbyname_r exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3863349297/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3863349297.dir/build.make CMakeFiles/cmTryCompileExec3863349297.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3863349297.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3863349297.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3863349297
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3863349297.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3863349297.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3863349297 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyname_r
  return ((int*)(&gethostbyname_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the gethostbyaddr_r exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1630750562/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1630750562.dir/build.make CMakeFiles/cmTryCompileExec1630750562.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1630750562.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1630750562.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1630750562
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1630750562.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1630750562.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1630750562 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef gethostbyaddr_r
  return ((int*)(&gethostbyaddr_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the signal exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2948428519/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2948428519.dir/build.make CMakeFiles/cmTryCompileExec2948428519.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2948428519.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2948428519.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2948428519
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2948428519.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2948428519.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2948428519 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef signal
  return ((int*)(&signal))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the SIGALRM exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3357765565/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3357765565.dir/build.make CMakeFiles/cmTryCompileExec3357765565.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3357765565.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3357765565.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3357765565
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3357765565.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3357765565.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3357765565 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef SIGALRM
  return ((int*)(&SIGALRM))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the strtoll exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec833411250/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec833411250.dir/build.make CMakeFiles/cmTryCompileExec833411250.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec833411250.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec833411250.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec833411250
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec833411250.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec833411250.dir/CheckSymbolExists.c.o  -o cmTryCompileExec833411250 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strtoll
  return ((int*)(&strtoll))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the strerror_r exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec320273410/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec320273410.dir/build.make CMakeFiles/cmTryCompileExec320273410.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec320273410.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec320273410.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec320273410
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec320273410.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec320273410.dir/CheckSymbolExists.c.o  -o cmTryCompileExec320273410 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strerror_r
  return ((int*)(&strerror_r))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the siginterrupt exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2385156315/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2385156315.dir/build.make CMakeFiles/cmTryCompileExec2385156315.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2385156315.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2385156315.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2385156315
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2385156315.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2385156315.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2385156315 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef siginterrupt
  return ((int*)(&siginterrupt))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the fork exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1687728797/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1687728797.dir/build.make CMakeFiles/cmTryCompileExec1687728797.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1687728797.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1687728797.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1687728797
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1687728797.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1687728797.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1687728797 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef fork
  return ((int*)(&fork))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the pipe exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec68747659/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec68747659.dir/build.make CMakeFiles/cmTryCompileExec68747659.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec68747659.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec68747659.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec68747659
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec68747659.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec68747659.dir/CheckSymbolExists.c.o  -o cmTryCompileExec68747659 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pipe
  return ((int*)(&pipe))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the ftruncate exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1818142524/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1818142524.dir/build.make CMakeFiles/cmTryCompileExec1818142524.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1818142524.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1818142524.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1818142524
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1818142524.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1818142524.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1818142524 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef ftruncate
  return ((int*)(&ftruncate))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the getprotobyname exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3846271756/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3846271756.dir/build.make CMakeFiles/cmTryCompileExec3846271756.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3846271756.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3846271756.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3846271756
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3846271756.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3846271756.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3846271756 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getprotobyname
  return ((int*)(&getprotobyname))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the getrlimit exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2024950436/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2024950436.dir/build.make CMakeFiles/cmTryCompileExec2024950436.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2024950436.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2024950436.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec2024950436
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2024950436.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2024950436.dir/CheckSymbolExists.c.o  -o cmTryCompileExec2024950436 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef getrlimit
  return ((int*)(&getrlimit))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the setlocale exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3913822100/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3913822100.dir/build.make CMakeFiles/cmTryCompileExec3913822100.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3913822100.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3913822100.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3913822100
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3913822100.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3913822100.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3913822100 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setlocale
  return ((int*)(&setlocale))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the setrlimit exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1429985665/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1429985665.dir/build.make CMakeFiles/cmTryCompileExec1429985665.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1429985665.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1429985665.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec1429985665
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1429985665.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1429985665.dir/CheckSymbolExists.c.o  -o cmTryCompileExec1429985665 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>
#include <stddef.h>
#include <sys/types.h>
#include <inttypes.h>
#include <alloca.h>
#include <arpa/inet.h>
#include <dlfcn.h>
#include <fcntl.h>
#include <malloc.h>
#include <memory.h>
#include <netdb.h>
#include <sys/poll.h>
#include <assert.h>
#include <limits.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <net/if.h>
#include <netinet/if_ether.h>
#include <netinet/tcp.h>
#include <sys/select.h>
#include <utime.h>
#include <netinet/in.h>
#include <pwd.h>
#include <sgtty.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <strings.h>
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <termios.h>
#include <termio.h>
#include <time.h>
#include <unistd.h>
#include <locale.h>
#include <setjmp.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <sys/utsname.h>
#include <arpa/tftp.h>
#include <errno.h>
#include <libgen.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef setrlimit
  return ((int*)(&setrlimit))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the sigaction exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3049965643/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3049965643.dir/build.make CMakeFiles/cmTryCompileExec3049965643.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3049965643.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3049965643.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3049965643
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3049965643.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3049965643.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3049965643 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <signal.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef sigaction
  return ((int*)(&sigaction))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Performing Curl Test HAVE_O_NONBLOCK passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1448718974/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1448718974.dir/build.make CMakeFiles/cmTryCompileExec1448718974.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1448718974.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_O_NONBLOCK   -o CMakeFiles/cmTryCompileExec1448718974.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec1448718974
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1448718974.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_O_NONBLOCK   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1448718974.dir/CurlTests.c.o  -o cmTryCompileExec1448718974 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test TIME_WITH_SYS_TIME passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec137923954/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec137923954.dir/build.make CMakeFiles/cmTryCompileExec137923954.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec137923954.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DTIME_WITH_SYS_TIME   -o CMakeFiles/cmTryCompileExec137923954.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec137923954
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec137923954.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DTIME_WITH_SYS_TIME   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec137923954.dir/CurlTests.c.o  -o cmTryCompileExec137923954 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test HAVE_GETHOSTBYADDR_R_8 passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1061266562/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1061266562.dir/build.make CMakeFiles/cmTryCompileExec1061266562.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1061266562.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETHOSTBYADDR_R_8   -o CMakeFiles/cmTryCompileExec1061266562.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec1061266562
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1061266562.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETHOSTBYADDR_R_8   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1061266562.dir/CurlTests.c.o  -o cmTryCompileExec1061266562 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test HAVE_GETHOSTBYADDR_R_8_REENTRANT passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2000815447/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2000815447.dir/build.make CMakeFiles/cmTryCompileExec2000815447.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2000815447.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETHOSTBYADDR_R_8_REENTRANT   -o CMakeFiles/cmTryCompileExec2000815447.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec2000815447
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2000815447.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETHOSTBYADDR_R_8_REENTRANT   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2000815447.dir/CurlTests.c.o  -o cmTryCompileExec2000815447 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test HAVE_GETHOSTBYNAME_R_6 passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2344577249/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2344577249.dir/build.make CMakeFiles/cmTryCompileExec2344577249.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2344577249.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETHOSTBYNAME_R_6   -o CMakeFiles/cmTryCompileExec2344577249.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec2344577249
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2344577249.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETHOSTBYNAME_R_6   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2344577249.dir/CurlTests.c.o  -o cmTryCompileExec2344577249 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test HAVE_GETHOSTBYNAME_R_6_REENTRANT passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2852703732/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2852703732.dir/build.make CMakeFiles/cmTryCompileExec2852703732.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2852703732.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETHOSTBYNAME_R_6_REENTRANT   -o CMakeFiles/cmTryCompileExec2852703732.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec2852703732
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2852703732.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETHOSTBYNAME_R_6_REENTRANT   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2852703732.dir/CurlTests.c.o  -o cmTryCompileExec2852703732 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test HAVE_SOCKLEN_T passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2943576413/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2943576413.dir/build.make CMakeFiles/cmTryCompileExec2943576413.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2943576413.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_SOCKLEN_T   -o CMakeFiles/cmTryCompileExec2943576413.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec2943576413
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2943576413.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_SOCKLEN_T   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2943576413.dir/CurlTests.c.o  -o cmTryCompileExec2943576413 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test HAVE_IN_ADDR_T passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3418984462/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3418984462.dir/build.make CMakeFiles/cmTryCompileExec3418984462.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3418984462.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_IN_ADDR_T   -o CMakeFiles/cmTryCompileExec3418984462.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec3418984462
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3418984462.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_IN_ADDR_T   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3418984462.dir/CurlTests.c.o  -o cmTryCompileExec3418984462 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test STDC_HEADERS passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2529976911/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2529976911.dir/build.make CMakeFiles/cmTryCompileExec2529976911.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2529976911.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DSTDC_HEADERS   -o CMakeFiles/cmTryCompileExec2529976911.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec2529976911
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2529976911.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DSTDC_HEADERS   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2529976911.dir/CurlTests.c.o  -o cmTryCompileExec2529976911 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test RETSIGTYPE_TEST passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1135132400/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1135132400.dir/build.make CMakeFiles/cmTryCompileExec1135132400.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1135132400.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DRETSIGTYPE_TEST   -o CMakeFiles/cmTryCompileExec1135132400.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec1135132400
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1135132400.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DRETSIGTYPE_TEST   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1135132400.dir/CurlTests.c.o  -o cmTryCompileExec1135132400 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test HAVE_GETADDRINFO passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1982657056/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1982657056.dir/build.make CMakeFiles/cmTryCompileExec1982657056.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1982657056.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETADDRINFO   -o CMakeFiles/cmTryCompileExec1982657056.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c: In function ‘main’:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c:405:5: warning: incompatible implicit declaration of built-in function ‘memset’ [enabled by default]
     memset(&hints, 0, sizeof(hints));
     ^
Linking C executable cmTryCompileExec1982657056
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1982657056.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_GETADDRINFO   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1982657056.dir/CurlTests.c.o  -o cmTryCompileExec1982657056 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Performing Curl Test HAVE_FILE_OFFSET_BITS passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec613775885/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec613775885.dir/build.make CMakeFiles/cmTryCompileExec613775885.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec613775885.dir/CurlTests.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_FILE_OFFSET_BITS   -o CMakeFiles/cmTryCompileExec613775885.dir/CurlTests.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmcurl/CMake/CurlTests.c
Linking C executable cmTryCompileExec613775885
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec613775885.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_FILE_OFFSET_BITS   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec613775885.dir/CurlTests.c.o  -o cmTryCompileExec613775885 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Determining size of curl_off_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1655145910/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1655145910.dir/build.make CMakeFiles/cmTryCompileExec1655145910.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1655145910.dir/SIZEOF_CURL_OFF_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -D_FILE_OFFSET_BITS=64   -o CMakeFiles/cmTryCompileExec1655145910.dir/SIZEOF_CURL_OFF_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_CURL_OFF_T.c
Linking C executable cmTryCompileExec1655145910
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1655145910.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -D_FILE_OFFSET_BITS=64   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1655145910.dir/SIZEOF_CURL_OFF_T.c.o  -o cmTryCompileExec1655145910 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Performing C SOURCE FILE Test curl_cv_recv succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec419550148/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec419550148.dir/build.make CMakeFiles/cmTryCompileExec419550148.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec419550148.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -Dcurl_cv_recv   -o CMakeFiles/cmTryCompileExec419550148.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec419550148
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec419550148.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -Dcurl_cv_recv   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec419550148.dir/src.c.o  -o cmTryCompileExec419550148 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#define __unused1
#undef inline
#define __unused2

#include <sys/types.h>
#include <sys/socket.h>

#define __unused5 1

int main() { recv(0, 0, 0, 0) ; return 0; }
Performing C SOURCE FILE Test int recv(int, void *, size_t, int) (curl_cv_func_recv_test) succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1720631767/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1720631767.dir/build.make CMakeFiles/cmTryCompileExec1720631767.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1720631767.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -Dcurl_cv_func_recv_test   -o CMakeFiles/cmTryCompileExec1720631767.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec1720631767
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1720631767.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -Dcurl_cv_func_recv_test   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1720631767.dir/src.c.o  -o cmTryCompileExec1720631767 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#define __unused1
#undef inline
#define __unused2

#include <sys/types.h>
#include <sys/socket.h>
extern int  recv(int, void *, size_t, int);
#define __unused5 1

int main() { 
                    int s=0;
                    void * buf=0;
                    size_t len=0;
                    int flags=0;
                    int res = recv(s, buf, len, flags) ; return 0; }
Performing C SOURCE FILE Test curl_cv_send succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec30524250/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec30524250.dir/build.make CMakeFiles/cmTryCompileExec30524250.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec30524250.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -Dcurl_cv_send   -o CMakeFiles/cmTryCompileExec30524250.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec30524250
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec30524250.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -Dcurl_cv_send   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec30524250.dir/src.c.o  -o cmTryCompileExec30524250 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#define __unused1
#undef inline
#define __unused2

#include <sys/types.h>
#include <sys/socket.h>
extern int  recv(int, void *, size_t, int);
#define __unused5 1

int main() { send(0, 0, 0, 0) ; return 0; }
Performing C SOURCE FILE Test int send(int, const void *, size_t, int) (curl_cv_func_send_test) succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2495487536/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2495487536.dir/build.make CMakeFiles/cmTryCompileExec2495487536.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2495487536.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -Dcurl_cv_func_send_test   -o CMakeFiles/cmTryCompileExec2495487536.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec2495487536
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2495487536.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -Dcurl_cv_func_send_test   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2495487536.dir/src.c.o  -o cmTryCompileExec2495487536 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#define __unused1
#undef inline
#define __unused2

#include <sys/types.h>
#include <sys/socket.h>
extern int  send(int, const void *, size_t, int);
#define __unused5 1

int main() { 
                    int s=0;
                    const void * buf=0;
                    size_t len=0;
                    int flags=0;
                    int res = send(s, buf, len, flags) ; return 0; }
Performing C SOURCE FILE Test HAVE_MSG_NOSIGNAL succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3484367792/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3484367792.dir/build.make CMakeFiles/cmTryCompileExec3484367792.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3484367792.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_MSG_NOSIGNAL   -o CMakeFiles/cmTryCompileExec3484367792.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c:12:0: warning: "__unused5" redefined [enabled by default]
 #define __unused5 1
 ^
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c:8:0: note: this is the location of the previous definition
 #define __unused5
 ^
Linking C executable cmTryCompileExec3484367792
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3484367792.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_MSG_NOSIGNAL   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3484367792.dir/src.c.o  -o cmTryCompileExec3484367792 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#define __unused1
#undef inline
#define __unused2

#include <sys/types.h>
#include <sys/socket.h>
extern int  send(int, const void *, size_t, int);
#define __unused5

#include <sys/types.h>
#include <sys/socket.h>
#define __unused5 1

int main() { int flag = MSG_NOSIGNAL ; return 0; }
Performing C SOURCE FILE Test HAVE_STRUCT_TIMEVAL succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4240127401/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4240127401.dir/build.make CMakeFiles/cmTryCompileExec4240127401.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4240127401.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_STRUCT_TIMEVAL   -o CMakeFiles/cmTryCompileExec4240127401.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec4240127401
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4240127401.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_STRUCT_TIMEVAL   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4240127401.dir/src.c.o  -o cmTryCompileExec4240127401 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#define __unused1
#undef inline
#define __unused2

#include <sys/types.h>
#include <sys/time.h>
#include <time.h>
#include <time.h>
#define __unused5 1

int main() { struct timeval ts;
ts.tv_sec  = 0;
ts.tv_usec = 0 ; return 0; }
Determining size of sig_atomic_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec887650439/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec887650439.dir/build.make CMakeFiles/cmTryCompileExec887650439.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec887650439.dir/SIZEOF_SIG_ATOMIC_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec887650439.dir/SIZEOF_SIG_ATOMIC_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_SIG_ATOMIC_T.c
Linking C executable cmTryCompileExec887650439
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec887650439.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec887650439.dir/SIZEOF_SIG_ATOMIC_T.c.o  -o cmTryCompileExec887650439 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Performing C SOURCE FILE Test HAVE_SIG_ATOMIC_T_NOT_VOLATILE succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4133408508/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4133408508.dir/build.make CMakeFiles/cmTryCompileExec4133408508.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4133408508.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_SIG_ATOMIC_T_NOT_VOLATILE   -o CMakeFiles/cmTryCompileExec4133408508.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec4133408508
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4133408508.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DHAVE_SIG_ATOMIC_T_NOT_VOLATILE   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4133408508.dir/src.c.o  -o cmTryCompileExec4133408508 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#include <signal.h>

int main() { static volatile sig_atomic_t dummy = 0 ; return 0; }
Determining size of struct sockaddr_storage passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3895218779/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3895218779.dir/build.make CMakeFiles/cmTryCompileExec3895218779.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3895218779.dir/SIZEOF_STRUCT_SOCKADDR_STORAGE.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec3895218779.dir/SIZEOF_STRUCT_SOCKADDR_STORAGE.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_STRUCT_SOCKADDR_STORAGE.c
Linking C executable cmTryCompileExec3895218779
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3895218779.dir/link.txt --verbose=1
/usr/bin/gcc    -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3895218779.dir/SIZEOF_STRUCT_SOCKADDR_STORAGE.c.o  -o cmTryCompileExec3895218779 -rdynamic -ldl 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Performing C SOURCE FILE Test HAVE_DIRENT_H succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2032934134/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2032934134.dir/build.make CMakeFiles/cmTryCompileExec2032934134.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2032934134.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_DIRENT_H   -o CMakeFiles/cmTryCompileExec2032934134.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec2032934134
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2032934134.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_DIRENT_H   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2032934134.dir/src.c.o  -o cmTryCompileExec2032934134 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#include <dirent.h>

int main()
{
   static DIR * tmp;
   if (sizeof(tmp))
      return 0;
  return 0;
}

Determining if files sys/types.h;ctype.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec532381395/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec532381395.dir/build.make CMakeFiles/cmTryCompileExec532381395.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec532381395.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec532381395.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec532381395
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec532381395.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec532381395.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec532381395 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1206477944/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1206477944.dir/build.make CMakeFiles/cmTryCompileExec1206477944.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1206477944.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec1206477944.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1206477944
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1206477944.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1206477944.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1206477944 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2458288930/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2458288930.dir/build.make CMakeFiles/cmTryCompileExec2458288930.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2458288930.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2458288930.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2458288930
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2458288930.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2458288930.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2458288930 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3153327809/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3153327809.dir/build.make CMakeFiles/cmTryCompileExec3153327809.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3153327809.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3153327809.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3153327809
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3153327809.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3153327809.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3153327809 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1310915392/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1310915392.dir/build.make CMakeFiles/cmTryCompileExec1310915392.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1310915392.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec1310915392.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1310915392
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1310915392.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1310915392.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1310915392 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2358466912/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2358466912.dir/build.make CMakeFiles/cmTryCompileExec2358466912.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2358466912.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2358466912.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2358466912
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2358466912.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2358466912.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2358466912 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec824910966/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec824910966.dir/build.make CMakeFiles/cmTryCompileExec824910966.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec824910966.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec824910966.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec824910966
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec824910966.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec824910966.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec824910966 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4204073063/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4204073063.dir/build.make CMakeFiles/cmTryCompileExec4204073063.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4204073063.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec4204073063.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec4204073063
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4204073063.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4204073063.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec4204073063 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2478936796/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2478936796.dir/build.make CMakeFiles/cmTryCompileExec2478936796.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2478936796.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2478936796.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2478936796
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2478936796.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2478936796.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2478936796 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4005151173/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4005151173.dir/build.make CMakeFiles/cmTryCompileExec4005151173.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4005151173.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec4005151173.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec4005151173
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4005151173.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4005151173.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec4005151173 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h;signal.h;stdarg.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec731502260/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec731502260.dir/build.make CMakeFiles/cmTryCompileExec731502260.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec731502260.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec731502260.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec731502260
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec731502260.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec731502260.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec731502260 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h;signal.h;stdarg.h;stdint.h;stdlib.h;string.h;strings.h;sys/cdefs.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3489440650/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3489440650.dir/build.make CMakeFiles/cmTryCompileExec3489440650.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3489440650.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3489440650.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3489440650
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3489440650.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3489440650.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3489440650 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h;signal.h;stdarg.h;stdint.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1568318352/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1568318352.dir/build.make CMakeFiles/cmTryCompileExec1568318352.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1568318352.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec1568318352.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec1568318352
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1568318352.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1568318352.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1568318352 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h;signal.h;stdarg.h;stdint.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3875547140/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3875547140.dir/build.make CMakeFiles/cmTryCompileExec3875547140.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3875547140.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3875547140.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3875547140
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3875547140.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3875547140.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3875547140 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h;signal.h;stdarg.h;stdint.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/time.h;sys/utsname.h;sys/vfs.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec297754775/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec297754775.dir/build.make CMakeFiles/cmTryCompileExec297754775.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec297754775.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec297754775.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec297754775
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec297754775.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec297754775.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec297754775 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h;signal.h;stdarg.h;stdint.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec258891377/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec258891377.dir/build.make CMakeFiles/cmTryCompileExec258891377.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec258891377.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec258891377.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec258891377
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec258891377.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec258891377.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec258891377 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h;signal.h;stdarg.h;stdint.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;time.h;unistd.h;utime.h;wchar.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2195714066/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2195714066.dir/build.make CMakeFiles/cmTryCompileExec2195714066.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2195714066.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2195714066.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec2195714066
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2195714066.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2195714066.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec2195714066 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if files sys/types.h;ctype.h;dlfcn.h;errno.h;fcntl.h;grp.h;inttypes.h;langinfo.h;limits.h;linux/types.h;linux/fiemap.h;linux/fs.h;linux/magic.h;locale.h;memory.h;paths.h;poll.h;pwd.h;regex.h;signal.h;stdarg.h;stdint.h;stdlib.h;string.h;strings.h;sys/cdefs.h;sys/ioctl.h;sys/param.h;sys/poll.h;sys/select.h;sys/stat.h;sys/statfs.h;sys/statvfs.h;sys/time.h;sys/utsname.h;sys/vfs.h;sys/wait.h;time.h;unistd.h;utime.h;wchar.h;wctype.h exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3397993942/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3397993942.dir/build.make CMakeFiles/cmTryCompileExec3397993942.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3397993942.dir/CheckIncludeFiles.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3397993942.dir/CheckIncludeFiles.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
Linking C executable cmTryCompileExec3397993942
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3397993942.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3397993942.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec3397993942 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Performing C SOURCE FILE Test SAFE_TO_DEFINE_EXTENSIONS succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1036080006/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1036080006.dir/build.make CMakeFiles/cmTryCompileExec1036080006.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1036080006.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DSAFE_TO_DEFINE_EXTENSIONS   -o CMakeFiles/cmTryCompileExec1036080006.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec1036080006
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1036080006.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DSAFE_TO_DEFINE_EXTENSIONS   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1036080006.dir/src.c.o  -o cmTryCompileExec1036080006 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#define __EXTENSIONS__ 1
   
   int main() { return 0;}
Determining if the function chown exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3255166044/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3255166044.dir/build.make CMakeFiles/cmTryCompileExec3255166044.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3255166044.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=chown  -fno-builtin   -o CMakeFiles/cmTryCompileExec3255166044.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3255166044
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3255166044.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=chown  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3255166044.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3255166044 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function chroot exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1510590350/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1510590350.dir/build.make CMakeFiles/cmTryCompileExec1510590350.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1510590350.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=chroot  -fno-builtin   -o CMakeFiles/cmTryCompileExec1510590350.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1510590350
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1510590350.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=chroot  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1510590350.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1510590350 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function ctime_r exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1878438789/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1878438789.dir/build.make CMakeFiles/cmTryCompileExec1878438789.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1878438789.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=ctime_r  -fno-builtin   -o CMakeFiles/cmTryCompileExec1878438789.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1878438789
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1878438789.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=ctime_r  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1878438789.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1878438789 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fchdir exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec256846443/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec256846443.dir/build.make CMakeFiles/cmTryCompileExec256846443.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec256846443.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fchdir  -fno-builtin   -o CMakeFiles/cmTryCompileExec256846443.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec256846443
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec256846443.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fchdir  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec256846443.dir/CheckFunctionExists.c.o  -o cmTryCompileExec256846443 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fchmod exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec562830329/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec562830329.dir/build.make CMakeFiles/cmTryCompileExec562830329.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec562830329.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fchmod  -fno-builtin   -o CMakeFiles/cmTryCompileExec562830329.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec562830329
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec562830329.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fchmod  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec562830329.dir/CheckFunctionExists.c.o  -o cmTryCompileExec562830329 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fchown exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec222311727/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec222311727.dir/build.make CMakeFiles/cmTryCompileExec222311727.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec222311727.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fchown  -fno-builtin   -o CMakeFiles/cmTryCompileExec222311727.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec222311727
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec222311727.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fchown  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec222311727.dir/CheckFunctionExists.c.o  -o cmTryCompileExec222311727 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fcntl exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1404602762/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1404602762.dir/build.make CMakeFiles/cmTryCompileExec1404602762.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1404602762.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fcntl  -fno-builtin   -o CMakeFiles/cmTryCompileExec1404602762.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1404602762
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1404602762.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fcntl  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1404602762.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1404602762 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fdopendir exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec373736373/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec373736373.dir/build.make CMakeFiles/cmTryCompileExec373736373.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec373736373.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fdopendir  -fno-builtin   -o CMakeFiles/cmTryCompileExec373736373.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec373736373
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec373736373.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fdopendir  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec373736373.dir/CheckFunctionExists.c.o  -o cmTryCompileExec373736373 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fstat exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3860053531/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3860053531.dir/build.make CMakeFiles/cmTryCompileExec3860053531.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3860053531.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fstat  -fno-builtin   -o CMakeFiles/cmTryCompileExec3860053531.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3860053531
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3860053531.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fstat  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3860053531.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3860053531 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fstatat exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec850476476/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec850476476.dir/build.make CMakeFiles/cmTryCompileExec850476476.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec850476476.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fstatat  -fno-builtin   -o CMakeFiles/cmTryCompileExec850476476.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec850476476
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec850476476.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fstatat  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec850476476.dir/CheckFunctionExists.c.o  -o cmTryCompileExec850476476 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fstatfs exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2444162161/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2444162161.dir/build.make CMakeFiles/cmTryCompileExec2444162161.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2444162161.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fstatfs  -fno-builtin   -o CMakeFiles/cmTryCompileExec2444162161.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2444162161
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2444162161.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fstatfs  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2444162161.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2444162161 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fstatvfs exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1461634052/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1461634052.dir/build.make CMakeFiles/cmTryCompileExec1461634052.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1461634052.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fstatvfs  -fno-builtin   -o CMakeFiles/cmTryCompileExec1461634052.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1461634052
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1461634052.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fstatvfs  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1461634052.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1461634052 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function futimens exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec401584975/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec401584975.dir/build.make CMakeFiles/cmTryCompileExec401584975.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec401584975.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=futimens  -fno-builtin   -o CMakeFiles/cmTryCompileExec401584975.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec401584975
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec401584975.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=futimens  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec401584975.dir/CheckFunctionExists.c.o  -o cmTryCompileExec401584975 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function futimes exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec806180997/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec806180997.dir/build.make CMakeFiles/cmTryCompileExec806180997.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec806180997.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=futimes  -fno-builtin   -o CMakeFiles/cmTryCompileExec806180997.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec806180997
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec806180997.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=futimes  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec806180997.dir/CheckFunctionExists.c.o  -o cmTryCompileExec806180997 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function futimesat exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1763510925/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1763510925.dir/build.make CMakeFiles/cmTryCompileExec1763510925.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1763510925.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=futimesat  -fno-builtin   -o CMakeFiles/cmTryCompileExec1763510925.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1763510925
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1763510925.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=futimesat  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1763510925.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1763510925 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function getgrgid_r exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3326235024/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3326235024.dir/build.make CMakeFiles/cmTryCompileExec3326235024.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3326235024.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getgrgid_r  -fno-builtin   -o CMakeFiles/cmTryCompileExec3326235024.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3326235024
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3326235024.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getgrgid_r  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3326235024.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3326235024 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function getgrnam_r exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3129913047/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3129913047.dir/build.make CMakeFiles/cmTryCompileExec3129913047.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3129913047.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getgrnam_r  -fno-builtin   -o CMakeFiles/cmTryCompileExec3129913047.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3129913047
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3129913047.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getgrnam_r  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3129913047.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3129913047 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function getpwnam_r exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1450531691/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1450531691.dir/build.make CMakeFiles/cmTryCompileExec1450531691.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1450531691.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getpwnam_r  -fno-builtin   -o CMakeFiles/cmTryCompileExec1450531691.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1450531691
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1450531691.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getpwnam_r  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1450531691.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1450531691 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function getpwuid_r exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1294728058/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1294728058.dir/build.make CMakeFiles/cmTryCompileExec1294728058.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1294728058.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getpwuid_r  -fno-builtin   -o CMakeFiles/cmTryCompileExec1294728058.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1294728058
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1294728058.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getpwuid_r  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1294728058.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1294728058 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function getpid exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2661613541/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2661613541.dir/build.make CMakeFiles/cmTryCompileExec2661613541.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2661613541.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getpid  -fno-builtin   -o CMakeFiles/cmTryCompileExec2661613541.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2661613541
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2661613541.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=getpid  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2661613541.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2661613541 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function lchown exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1033128761/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1033128761.dir/build.make CMakeFiles/cmTryCompileExec1033128761.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1033128761.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=lchown  -fno-builtin   -o CMakeFiles/cmTryCompileExec1033128761.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1033128761
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1033128761.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=lchown  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1033128761.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1033128761 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function link exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec144143613/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec144143613.dir/build.make CMakeFiles/cmTryCompileExec144143613.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec144143613.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=link  -fno-builtin   -o CMakeFiles/cmTryCompileExec144143613.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec144143613
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec144143613.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=link  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec144143613.dir/CheckFunctionExists.c.o  -o cmTryCompileExec144143613 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function lstat exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec59278901/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec59278901.dir/build.make CMakeFiles/cmTryCompileExec59278901.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec59278901.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=lstat  -fno-builtin   -o CMakeFiles/cmTryCompileExec59278901.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec59278901
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec59278901.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=lstat  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec59278901.dir/CheckFunctionExists.c.o  -o cmTryCompileExec59278901 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function lutimes exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec978298654/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec978298654.dir/build.make CMakeFiles/cmTryCompileExec978298654.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec978298654.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=lutimes  -fno-builtin   -o CMakeFiles/cmTryCompileExec978298654.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec978298654
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec978298654.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=lutimes  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec978298654.dir/CheckFunctionExists.c.o  -o cmTryCompileExec978298654 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function mbrtowc exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec542694534/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec542694534.dir/build.make CMakeFiles/cmTryCompileExec542694534.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec542694534.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mbrtowc  -fno-builtin   -o CMakeFiles/cmTryCompileExec542694534.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec542694534
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec542694534.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mbrtowc  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec542694534.dir/CheckFunctionExists.c.o  -o cmTryCompileExec542694534 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function mbsnrtowcs exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec945410763/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec945410763.dir/build.make CMakeFiles/cmTryCompileExec945410763.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec945410763.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mbsnrtowcs  -fno-builtin   -o CMakeFiles/cmTryCompileExec945410763.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec945410763
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec945410763.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mbsnrtowcs  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec945410763.dir/CheckFunctionExists.c.o  -o cmTryCompileExec945410763 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function memmove exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3596807880/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3596807880.dir/build.make CMakeFiles/cmTryCompileExec3596807880.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3596807880.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=memmove  -fno-builtin   -o CMakeFiles/cmTryCompileExec3596807880.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3596807880
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3596807880.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=memmove  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3596807880.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3596807880 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function mkdir exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4149552136/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4149552136.dir/build.make CMakeFiles/cmTryCompileExec4149552136.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4149552136.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mkdir  -fno-builtin   -o CMakeFiles/cmTryCompileExec4149552136.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec4149552136
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4149552136.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mkdir  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4149552136.dir/CheckFunctionExists.c.o  -o cmTryCompileExec4149552136 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function mkfifo exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3581020527/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3581020527.dir/build.make CMakeFiles/cmTryCompileExec3581020527.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3581020527.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mkfifo  -fno-builtin   -o CMakeFiles/cmTryCompileExec3581020527.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3581020527
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3581020527.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mkfifo  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3581020527.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3581020527 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function mknod exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2382913090/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2382913090.dir/build.make CMakeFiles/cmTryCompileExec2382913090.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2382913090.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mknod  -fno-builtin   -o CMakeFiles/cmTryCompileExec2382913090.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2382913090
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2382913090.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mknod  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2382913090.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2382913090 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function mkstemp exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1291225239/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1291225239.dir/build.make CMakeFiles/cmTryCompileExec1291225239.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1291225239.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mkstemp  -fno-builtin   -o CMakeFiles/cmTryCompileExec1291225239.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1291225239
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1291225239.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=mkstemp  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1291225239.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1291225239 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function nl_langinfo exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2538185887/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2538185887.dir/build.make CMakeFiles/cmTryCompileExec2538185887.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2538185887.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=nl_langinfo  -fno-builtin   -o CMakeFiles/cmTryCompileExec2538185887.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2538185887
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2538185887.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=nl_langinfo  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2538185887.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2538185887 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function openat exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2491822209/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2491822209.dir/build.make CMakeFiles/cmTryCompileExec2491822209.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2491822209.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=openat  -fno-builtin   -o CMakeFiles/cmTryCompileExec2491822209.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2491822209
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2491822209.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=openat  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2491822209.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2491822209 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function readlink exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1826881507/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1826881507.dir/build.make CMakeFiles/cmTryCompileExec1826881507.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1826881507.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=readlink  -fno-builtin   -o CMakeFiles/cmTryCompileExec1826881507.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1826881507
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1826881507.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=readlink  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1826881507.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1826881507 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function setenv exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3153227521/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3153227521.dir/build.make CMakeFiles/cmTryCompileExec3153227521.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3153227521.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=setenv  -fno-builtin   -o CMakeFiles/cmTryCompileExec3153227521.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3153227521
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3153227521.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=setenv  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3153227521.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3153227521 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function statfs exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2196595573/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2196595573.dir/build.make CMakeFiles/cmTryCompileExec2196595573.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2196595573.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=statfs  -fno-builtin   -o CMakeFiles/cmTryCompileExec2196595573.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2196595573
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2196595573.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=statfs  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2196595573.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2196595573 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function statvfs exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3249843165/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3249843165.dir/build.make CMakeFiles/cmTryCompileExec3249843165.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3249843165.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=statvfs  -fno-builtin   -o CMakeFiles/cmTryCompileExec3249843165.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3249843165
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3249843165.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=statvfs  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3249843165.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3249843165 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function strchr exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1879485347/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1879485347.dir/build.make CMakeFiles/cmTryCompileExec1879485347.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1879485347.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=strchr  -fno-builtin   -o CMakeFiles/cmTryCompileExec1879485347.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1879485347
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1879485347.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=strchr  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1879485347.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1879485347 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function strerror exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec18665352/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec18665352.dir/build.make CMakeFiles/cmTryCompileExec18665352.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec18665352.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=strerror  -fno-builtin   -o CMakeFiles/cmTryCompileExec18665352.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec18665352
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec18665352.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=strerror  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec18665352.dir/CheckFunctionExists.c.o  -o cmTryCompileExec18665352 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function strrchr exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1486057978/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1486057978.dir/build.make CMakeFiles/cmTryCompileExec1486057978.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1486057978.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=strrchr  -fno-builtin   -o CMakeFiles/cmTryCompileExec1486057978.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1486057978
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1486057978.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=strrchr  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1486057978.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1486057978 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function symlink exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3887507342/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3887507342.dir/build.make CMakeFiles/cmTryCompileExec3887507342.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3887507342.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=symlink  -fno-builtin   -o CMakeFiles/cmTryCompileExec3887507342.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3887507342
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3887507342.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=symlink  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3887507342.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3887507342 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function timegm exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2064066612/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2064066612.dir/build.make CMakeFiles/cmTryCompileExec2064066612.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2064066612.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=timegm  -fno-builtin   -o CMakeFiles/cmTryCompileExec2064066612.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2064066612
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2064066612.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=timegm  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2064066612.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2064066612 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function tzset exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec738336439/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec738336439.dir/build.make CMakeFiles/cmTryCompileExec738336439.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec738336439.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=tzset  -fno-builtin   -o CMakeFiles/cmTryCompileExec738336439.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec738336439
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec738336439.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=tzset  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec738336439.dir/CheckFunctionExists.c.o  -o cmTryCompileExec738336439 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function utimes exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2113829160/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2113829160.dir/build.make CMakeFiles/cmTryCompileExec2113829160.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2113829160.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=utimes  -fno-builtin   -o CMakeFiles/cmTryCompileExec2113829160.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2113829160
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2113829160.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=utimes  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2113829160.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2113829160 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function utimensat exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3972332665/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3972332665.dir/build.make CMakeFiles/cmTryCompileExec3972332665.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3972332665.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=utimensat  -fno-builtin   -o CMakeFiles/cmTryCompileExec3972332665.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3972332665
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3972332665.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=utimensat  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3972332665.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3972332665 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function vfork exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec544982459/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec544982459.dir/build.make CMakeFiles/cmTryCompileExec544982459.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec544982459.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=vfork  -fno-builtin   -o CMakeFiles/cmTryCompileExec544982459.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec544982459
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec544982459.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=vfork  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec544982459.dir/CheckFunctionExists.c.o  -o cmTryCompileExec544982459 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wcrtomb exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec438158460/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec438158460.dir/build.make CMakeFiles/cmTryCompileExec438158460.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec438158460.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcrtomb  -fno-builtin   -o CMakeFiles/cmTryCompileExec438158460.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec438158460
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec438158460.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcrtomb  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec438158460.dir/CheckFunctionExists.c.o  -o cmTryCompileExec438158460 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wcscmp exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2466150601/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2466150601.dir/build.make CMakeFiles/cmTryCompileExec2466150601.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2466150601.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcscmp  -fno-builtin   -o CMakeFiles/cmTryCompileExec2466150601.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2466150601
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2466150601.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcscmp  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2466150601.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2466150601 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wcscpy exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec821586122/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec821586122.dir/build.make CMakeFiles/cmTryCompileExec821586122.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec821586122.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcscpy  -fno-builtin   -o CMakeFiles/cmTryCompileExec821586122.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec821586122
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec821586122.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcscpy  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec821586122.dir/CheckFunctionExists.c.o  -o cmTryCompileExec821586122 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wcslen exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2136357244/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2136357244.dir/build.make CMakeFiles/cmTryCompileExec2136357244.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2136357244.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcslen  -fno-builtin   -o CMakeFiles/cmTryCompileExec2136357244.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2136357244
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2136357244.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcslen  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2136357244.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2136357244 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wcsnrtombs exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec813836030/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec813836030.dir/build.make CMakeFiles/cmTryCompileExec813836030.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec813836030.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcsnrtombs  -fno-builtin   -o CMakeFiles/cmTryCompileExec813836030.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec813836030
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec813836030.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wcsnrtombs  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec813836030.dir/CheckFunctionExists.c.o  -o cmTryCompileExec813836030 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wctomb exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec91534476/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec91534476.dir/build.make CMakeFiles/cmTryCompileExec91534476.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec91534476.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wctomb  -fno-builtin   -o CMakeFiles/cmTryCompileExec91534476.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec91534476
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec91534476.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wctomb  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec91534476.dir/CheckFunctionExists.c.o  -o cmTryCompileExec91534476 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function fseeko exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3467752875/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3467752875.dir/build.make CMakeFiles/cmTryCompileExec3467752875.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3467752875.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fseeko  -fno-builtin   -o CMakeFiles/cmTryCompileExec3467752875.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3467752875
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3467752875.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=fseeko  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3467752875.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3467752875 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function vprintf exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1331008922/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1331008922.dir/build.make CMakeFiles/cmTryCompileExec1331008922.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1331008922.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=vprintf  -fno-builtin   -o CMakeFiles/cmTryCompileExec1331008922.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1331008922
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1331008922.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=vprintf  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1331008922.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1331008922 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wmemcmp exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3227397078/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3227397078.dir/build.make CMakeFiles/cmTryCompileExec3227397078.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3227397078.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wmemcmp  -fno-builtin   -o CMakeFiles/cmTryCompileExec3227397078.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec3227397078
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3227397078.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wmemcmp  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3227397078.dir/CheckFunctionExists.c.o  -o cmTryCompileExec3227397078 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wmemcpy exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2180118197/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2180118197.dir/build.make CMakeFiles/cmTryCompileExec2180118197.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2180118197.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wmemcpy  -fno-builtin   -o CMakeFiles/cmTryCompileExec2180118197.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec2180118197
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2180118197.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DCHECK_FUNCTION_EXISTS=wmemcpy  -fno-builtin   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2180118197.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2180118197 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Performing C SOURCE FILE Test HAVE_READDIR_R succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2050125155/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2050125155.dir/build.make CMakeFiles/cmTryCompileExec2050125155.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2050125155.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_READDIR_R   -o CMakeFiles/cmTryCompileExec2050125155.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec2050125155
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2050125155.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_READDIR_R   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2050125155.dir/src.c.o  -o cmTryCompileExec2050125155 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#include <dirent.h>
int main() {DIR *d = opendir("."); struct dirent e,*r; return readdir_r(d,&e,&r);}
Performing C SOURCE FILE Test HAVE_READLINKAT succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec642337455/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec642337455.dir/build.make CMakeFiles/cmTryCompileExec642337455.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec642337455.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_READLINKAT   -o CMakeFiles/cmTryCompileExec642337455.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec642337455
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec642337455.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_READLINKAT   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec642337455.dir/src.c.o  -o cmTryCompileExec642337455 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#include <fcntl.h>
#include <unistd.h>
int main() {char buf[10]; return readlinkat(AT_FDCWD, "", buf, 0);}
Performing C SOURCE FILE Test MAJOR_IN_SYSMACROS succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec36474527/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec36474527.dir/build.make CMakeFiles/cmTryCompileExec36474527.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec36474527.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DMAJOR_IN_SYSMACROS   -o CMakeFiles/cmTryCompileExec36474527.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec36474527
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec36474527.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DMAJOR_IN_SYSMACROS   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec36474527.dir/src.c.o  -o cmTryCompileExec36474527 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#include <sys/sysmacros.h>
int main() { return major(256); }
Determining if the EILSEQ exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3689654712/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3689654712.dir/build.make CMakeFiles/cmTryCompileExec3689654712.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3689654712.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3689654712.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3689654712
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3689654712.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3689654712.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3689654712 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <errno.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef EILSEQ
  return ((int*)(&EILSEQ))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the INT64_MAX exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3388272116/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3388272116.dir/build.make CMakeFiles/cmTryCompileExec3388272116.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3388272116.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3388272116.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3388272116
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3388272116.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3388272116.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3388272116 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <limits.h>
#include <stdint.h>
#include <inttypes.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef INT64_MAX
  return ((int*)(&INT64_MAX))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the INT64_MIN exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3797247215/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3797247215.dir/build.make CMakeFiles/cmTryCompileExec3797247215.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3797247215.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3797247215.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3797247215
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3797247215.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3797247215.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3797247215 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <limits.h>
#include <stdint.h>
#include <inttypes.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef INT64_MIN
  return ((int*)(&INT64_MIN))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the UINT32_MAX exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3086907965/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3086907965.dir/build.make CMakeFiles/cmTryCompileExec3086907965.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3086907965.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3086907965.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3086907965
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3086907965.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3086907965.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3086907965 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <limits.h>
#include <stdint.h>
#include <inttypes.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef UINT32_MAX
  return ((int*)(&UINT32_MAX))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the UINT64_MAX exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3599960979/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3599960979.dir/build.make CMakeFiles/cmTryCompileExec3599960979.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3599960979.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3599960979.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3599960979
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3599960979.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3599960979.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3599960979 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <limits.h>
#include <stdint.h>
#include <inttypes.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef UINT64_MAX
  return ((int*)(&UINT64_MAX))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the SIZE_MAX exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3100420902/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3100420902.dir/build.make CMakeFiles/cmTryCompileExec3100420902.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3100420902.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3100420902.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec3100420902
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3100420902.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3100420902.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3100420902 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <limits.h>
#include <stdint.h>
#include <inttypes.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef SIZE_MAX
  return ((int*)(&SIZE_MAX))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the SSIZE_MAX exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec305891224/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec305891224.dir/build.make CMakeFiles/cmTryCompileExec305891224.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec305891224.dir/CheckSymbolExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec305891224.dir/CheckSymbolExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTryCompileExec305891224
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec305891224.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec305891224.dir/CheckSymbolExists.c.o  -o cmTryCompileExec305891224 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <limits.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef SSIZE_MAX
  return ((int*)(&SSIZE_MAX))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Performing C SOURCE FILE Test HAVE_STRUCT_TM_TM_GMTOFF succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4092959512/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4092959512.dir/build.make CMakeFiles/cmTryCompileExec4092959512.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4092959512.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_STRUCT_TM_TM_GMTOFF   -o CMakeFiles/cmTryCompileExec4092959512.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec4092959512
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4092959512.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_STRUCT_TM_TM_GMTOFF   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec4092959512.dir/src.c.o  -o cmTryCompileExec4092959512 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#include <time.h>

int main()
{
   static struct tm tmp;
   if (sizeof(tmp.tm_gmtoff))
      return 0;
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3533982784/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3533982784.dir/build.make CMakeFiles/cmTryCompileExec3533982784.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3533982784.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_STRUCT_STAT_ST_MTIM_TV_NSEC   -o CMakeFiles/cmTryCompileExec3533982784.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec3533982784
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3533982784.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_STRUCT_STAT_ST_MTIM_TV_NSEC   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3533982784.dir/src.c.o  -o cmTryCompileExec3533982784 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#include <sys/types.h>
#include <sys/stat.h>

int main()
{
   static struct stat tmp;
   if (sizeof(tmp.st_mtim.tv_nsec))
      return 0;
  return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_BLKSIZE succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec458693412/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec458693412.dir/build.make CMakeFiles/cmTryCompileExec458693412.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec458693412.dir/src.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_STRUCT_STAT_ST_BLKSIZE   -o CMakeFiles/cmTryCompileExec458693412.dir/src.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTryCompileExec458693412
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec458693412.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w  -DHAVE_STRUCT_STAT_ST_BLKSIZE   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec458693412.dir/src.c.o  -o cmTryCompileExec458693412 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#include <sys/types.h>
#include <sys/stat.h>

int main()
{
   static struct stat tmp;
   if (sizeof(tmp.st_blksize))
      return 0;
  return 0;
}

Determining size of short passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1620182061/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1620182061.dir/build.make CMakeFiles/cmTryCompileExec1620182061.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1620182061.dir/SIZE_OF_SHORT.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec1620182061.dir/SIZE_OF_SHORT.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_OF_SHORT.c
Linking C executable cmTryCompileExec1620182061
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1620182061.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1620182061.dir/SIZE_OF_SHORT.c.o  -o cmTryCompileExec1620182061 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of int passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2359543324/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2359543324.dir/build.make CMakeFiles/cmTryCompileExec2359543324.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2359543324.dir/SIZE_OF_INT.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2359543324.dir/SIZE_OF_INT.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_OF_INT.c
Linking C executable cmTryCompileExec2359543324
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2359543324.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2359543324.dir/SIZE_OF_INT.c.o  -o cmTryCompileExec2359543324 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of long passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec314095598/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec314095598.dir/build.make CMakeFiles/cmTryCompileExec314095598.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec314095598.dir/SIZE_OF_LONG.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec314095598.dir/SIZE_OF_LONG.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_OF_LONG.c
Linking C executable cmTryCompileExec314095598
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec314095598.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec314095598.dir/SIZE_OF_LONG.c.o  -o cmTryCompileExec314095598 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of long long passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2562107025/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2562107025.dir/build.make CMakeFiles/cmTryCompileExec2562107025.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2562107025.dir/SIZE_OF_LONG_LONG.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2562107025.dir/SIZE_OF_LONG_LONG.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_OF_LONG_LONG.c
Linking C executable cmTryCompileExec2562107025
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2562107025.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2562107025.dir/SIZE_OF_LONG_LONG.c.o  -o cmTryCompileExec2562107025 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of unsigned short passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2651256173/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2651256173.dir/build.make CMakeFiles/cmTryCompileExec2651256173.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2651256173.dir/SIZE_OF_UNSIGNED_SHORT.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2651256173.dir/SIZE_OF_UNSIGNED_SHORT.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_OF_UNSIGNED_SHORT.c
Linking C executable cmTryCompileExec2651256173
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2651256173.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2651256173.dir/SIZE_OF_UNSIGNED_SHORT.c.o  -o cmTryCompileExec2651256173 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of unsigned passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3466586227/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3466586227.dir/build.make CMakeFiles/cmTryCompileExec3466586227.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3466586227.dir/SIZE_OF_UNSIGNED.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3466586227.dir/SIZE_OF_UNSIGNED.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_OF_UNSIGNED.c
Linking C executable cmTryCompileExec3466586227
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3466586227.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3466586227.dir/SIZE_OF_UNSIGNED.c.o  -o cmTryCompileExec3466586227 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of unsigned long passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec373998242/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec373998242.dir/build.make CMakeFiles/cmTryCompileExec373998242.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec373998242.dir/SIZE_OF_UNSIGNED_LONG.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec373998242.dir/SIZE_OF_UNSIGNED_LONG.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_OF_UNSIGNED_LONG.c
Linking C executable cmTryCompileExec373998242
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec373998242.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec373998242.dir/SIZE_OF_UNSIGNED_LONG.c.o  -o cmTryCompileExec373998242 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of unsigned long long passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3929791931/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3929791931.dir/build.make CMakeFiles/cmTryCompileExec3929791931.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3929791931.dir/SIZE_OF_UNSIGNED_LONG_LONG.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3929791931.dir/SIZE_OF_UNSIGNED_LONG_LONG.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_OF_UNSIGNED_LONG_LONG.c
Linking C executable cmTryCompileExec3929791931
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3929791931.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3929791931.dir/SIZE_OF_UNSIGNED_LONG_LONG.c.o  -o cmTryCompileExec3929791931 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of int16_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3401705162/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3401705162.dir/build.make CMakeFiles/cmTryCompileExec3401705162.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3401705162.dir/INT16_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3401705162.dir/INT16_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/INT16_T.c
Linking C executable cmTryCompileExec3401705162
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3401705162.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3401705162.dir/INT16_T.c.o  -o cmTryCompileExec3401705162 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of int32_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1671246508/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1671246508.dir/build.make CMakeFiles/cmTryCompileExec1671246508.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1671246508.dir/INT32_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec1671246508.dir/INT32_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/INT32_T.c
Linking C executable cmTryCompileExec1671246508
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1671246508.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1671246508.dir/INT32_T.c.o  -o cmTryCompileExec1671246508 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of int64_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec290095728/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec290095728.dir/build.make CMakeFiles/cmTryCompileExec290095728.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec290095728.dir/INT64_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec290095728.dir/INT64_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/INT64_T.c
Linking C executable cmTryCompileExec290095728
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec290095728.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec290095728.dir/INT64_T.c.o  -o cmTryCompileExec290095728 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of intmax_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2047848849/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2047848849.dir/build.make CMakeFiles/cmTryCompileExec2047848849.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2047848849.dir/INTMAX_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2047848849.dir/INTMAX_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/INTMAX_T.c
Linking C executable cmTryCompileExec2047848849
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2047848849.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2047848849.dir/INTMAX_T.c.o  -o cmTryCompileExec2047848849 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of uint8_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec668422261/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec668422261.dir/build.make CMakeFiles/cmTryCompileExec668422261.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec668422261.dir/UINT8_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec668422261.dir/UINT8_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/UINT8_T.c
Linking C executable cmTryCompileExec668422261
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec668422261.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec668422261.dir/UINT8_T.c.o  -o cmTryCompileExec668422261 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of uint16_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1237246402/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1237246402.dir/build.make CMakeFiles/cmTryCompileExec1237246402.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1237246402.dir/UINT16_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec1237246402.dir/UINT16_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/UINT16_T.c
Linking C executable cmTryCompileExec1237246402
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1237246402.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1237246402.dir/UINT16_T.c.o  -o cmTryCompileExec1237246402 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of uint32_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2549675134/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2549675134.dir/build.make CMakeFiles/cmTryCompileExec2549675134.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2549675134.dir/UINT32_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2549675134.dir/UINT32_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/UINT32_T.c
Linking C executable cmTryCompileExec2549675134
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2549675134.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2549675134.dir/UINT32_T.c.o  -o cmTryCompileExec2549675134 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of uint64_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3660221967/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3660221967.dir/build.make CMakeFiles/cmTryCompileExec3660221967.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3660221967.dir/UINT64_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3660221967.dir/UINT64_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/UINT64_T.c
Linking C executable cmTryCompileExec3660221967
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3660221967.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3660221967.dir/UINT64_T.c.o  -o cmTryCompileExec3660221967 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of uintmax_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3844961756/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3844961756.dir/build.make CMakeFiles/cmTryCompileExec3844961756.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3844961756.dir/UINTMAX_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3844961756.dir/UINTMAX_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/UINTMAX_T.c
Linking C executable cmTryCompileExec3844961756
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3844961756.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3844961756.dir/UINTMAX_T.c.o  -o cmTryCompileExec3844961756 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of dev_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1890443173/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1890443173.dir/build.make CMakeFiles/cmTryCompileExec1890443173.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1890443173.dir/DEV_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec1890443173.dir/DEV_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/DEV_T.c
Linking C executable cmTryCompileExec1890443173
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1890443173.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1890443173.dir/DEV_T.c.o  -o cmTryCompileExec1890443173 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of gid_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec383537229/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec383537229.dir/build.make CMakeFiles/cmTryCompileExec383537229.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec383537229.dir/GID_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec383537229.dir/GID_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/GID_T.c
Linking C executable cmTryCompileExec383537229
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec383537229.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec383537229.dir/GID_T.c.o  -o cmTryCompileExec383537229 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of id_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2016539923/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2016539923.dir/build.make CMakeFiles/cmTryCompileExec2016539923.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2016539923.dir/ID_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2016539923.dir/ID_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/ID_T.c
Linking C executable cmTryCompileExec2016539923
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2016539923.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2016539923.dir/ID_T.c.o  -o cmTryCompileExec2016539923 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of mode_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3542472985/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3542472985.dir/build.make CMakeFiles/cmTryCompileExec3542472985.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3542472985.dir/MODE_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3542472985.dir/MODE_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/MODE_T.c
Linking C executable cmTryCompileExec3542472985
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3542472985.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3542472985.dir/MODE_T.c.o  -o cmTryCompileExec3542472985 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of off_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec944088760/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec944088760.dir/build.make CMakeFiles/cmTryCompileExec944088760.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec944088760.dir/OFF_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec944088760.dir/OFF_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/OFF_T.c
Linking C executable cmTryCompileExec944088760
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec944088760.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec944088760.dir/OFF_T.c.o  -o cmTryCompileExec944088760 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of size_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2570657542/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2570657542.dir/build.make CMakeFiles/cmTryCompileExec2570657542.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2570657542.dir/SIZE_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2570657542.dir/SIZE_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZE_T.c
Linking C executable cmTryCompileExec2570657542
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2570657542.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2570657542.dir/SIZE_T.c.o  -o cmTryCompileExec2570657542 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of ssize_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3985966287/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3985966287.dir/build.make CMakeFiles/cmTryCompileExec3985966287.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3985966287.dir/SSIZE_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3985966287.dir/SSIZE_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SSIZE_T.c
Linking C executable cmTryCompileExec3985966287
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3985966287.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3985966287.dir/SSIZE_T.c.o  -o cmTryCompileExec3985966287 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of uid_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3678786997/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3678786997.dir/build.make CMakeFiles/cmTryCompileExec3678786997.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3678786997.dir/UID_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3678786997.dir/UID_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/UID_T.c
Linking C executable cmTryCompileExec3678786997
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3678786997.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3678786997.dir/UID_T.c.o  -o cmTryCompileExec3678786997 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of pid_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec782368052/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec782368052.dir/build.make CMakeFiles/cmTryCompileExec782368052.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec782368052.dir/PID_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec782368052.dir/PID_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/PID_T.c
Linking C executable cmTryCompileExec782368052
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec782368052.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec782368052.dir/PID_T.c.o  -o cmTryCompileExec782368052 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of intptr_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2331927615/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2331927615.dir/build.make CMakeFiles/cmTryCompileExec2331927615.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2331927615.dir/INTPTR_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec2331927615.dir/INTPTR_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/INTPTR_T.c
Linking C executable cmTryCompileExec2331927615
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2331927615.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2331927615.dir/INTPTR_T.c.o  -o cmTryCompileExec2331927615 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of uintptr_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1999385714/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1999385714.dir/build.make CMakeFiles/cmTryCompileExec1999385714.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1999385714.dir/UINTPTR_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec1999385714.dir/UINTPTR_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/UINTPTR_T.c
Linking C executable cmTryCompileExec1999385714
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1999385714.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1999385714.dir/UINTPTR_T.c.o  -o cmTryCompileExec1999385714 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining size of wchar_t passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3931766752/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3931766752.dir/build.make CMakeFiles/cmTryCompileExec3931766752.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3931766752.dir/SIZEOF_WCHAR_T.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -o CMakeFiles/cmTryCompileExec3931766752.dir/SIZEOF_WCHAR_T.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/SIZEOF_WCHAR_T.c
Linking C executable cmTryCompileExec3931766752
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3931766752.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w     -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3931766752.dir/SIZEOF_WCHAR_T.c.o  -o cmTryCompileExec3931766752 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Checking support for ARCHIVE_CRYPTO_MD5_LIBC failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3586985311/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3586985311.dir/build.make CMakeFiles/cmTryCompileExec3586985311.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3586985311.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3586985311.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:61:17: fatal error: md5.h: No such file or directory
 #include <md5.h>
                 ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3586985311.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3586985311/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_MD5_COMPILE_TEST
#define ARCHIVE_CRYPTO_MD5_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_RMD160_LIBC failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3006033866/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3006033866.dir/build.make CMakeFiles/cmTryCompileExec3006033866.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3006033866.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3006033866.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:64:20: fatal error: rmd160.h: No such file or directory
 #include <rmd160.h>
                    ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3006033866.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3006033866/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_RMD160_COMPILE_TEST
#define ARCHIVE_CRYPTO_RMD160_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA1_LIBC failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3385923603/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3385923603.dir/build.make CMakeFiles/cmTryCompileExec3385923603.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3385923603.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3385923603.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:67:18: fatal error: sha1.h: No such file or directory
 #include <sha1.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3385923603.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3385923603/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA1_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA1_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBC failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3372342519/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3372342519.dir/build.make CMakeFiles/cmTryCompileExec3372342519.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3372342519.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3372342519.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3372342519.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3372342519/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_LIBC failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3966714626/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3966714626.dir/build.make CMakeFiles/cmTryCompileExec3966714626.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3966714626.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3966714626.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3966714626.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3966714626/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBC failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec521270033/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec521270033.dir/build.make CMakeFiles/cmTryCompileExec521270033.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec521270033.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec521270033.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec521270033.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec521270033/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBC
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBC2 failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2351258583/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2351258583.dir/build.make CMakeFiles/cmTryCompileExec2351258583.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2351258583.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec2351258583.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec2351258583.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec2351258583/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBC2
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_LIBC2 failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec627431526/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec627431526.dir/build.make CMakeFiles/cmTryCompileExec627431526.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec627431526.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec627431526.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec627431526.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec627431526/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_LIBC2
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBC2 failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1150748953/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1150748953.dir/build.make CMakeFiles/cmTryCompileExec1150748953.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1150748953.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec1150748953.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec1150748953.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec1150748953/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBC2
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBC3 failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec4023944466/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec4023944466.dir/build.make CMakeFiles/cmTryCompileExec4023944466.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec4023944466.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec4023944466.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec4023944466.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec4023944466/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBC3
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_LIBC3 failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3916697209/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3916697209.dir/build.make CMakeFiles/cmTryCompileExec3916697209.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3916697209.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3916697209.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3916697209.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3916697209/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_LIBC3
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBC3 failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3765667950/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3765667950.dir/build.make CMakeFiles/cmTryCompileExec3765667950.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3765667950.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3765667950.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:78:18: fatal error: sha2.h: No such file or directory
 #include <sha2.h>
                  ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3765667950.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3765667950/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBC3
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_MD5_LIBSYSTEM failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2324966180/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2324966180.dir/build.make CMakeFiles/cmTryCompileExec2324966180.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2324966180.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec2324966180.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:112:39: fatal error: CommonCrypto/CommonDigest.h: No such file or directory
 #include <CommonCrypto/CommonDigest.h>
                                       ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec2324966180.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec2324966180/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_MD5_COMPILE_TEST
#define ARCHIVE_CRYPTO_MD5_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA1_LIBSYSTEM failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3977747349/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3977747349.dir/build.make CMakeFiles/cmTryCompileExec3977747349.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3977747349.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3977747349.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:112:39: fatal error: CommonCrypto/CommonDigest.h: No such file or directory
 #include <CommonCrypto/CommonDigest.h>
                                       ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3977747349.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3977747349/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA1_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA1_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBSYSTEM failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3195382810/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3195382810.dir/build.make CMakeFiles/cmTryCompileExec3195382810.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3195382810.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3195382810.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:112:39: fatal error: CommonCrypto/CommonDigest.h: No such file or directory
 #include <CommonCrypto/CommonDigest.h>
                                       ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3195382810.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3195382810/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA384_LIBSYSTEM failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1325128048/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1325128048.dir/build.make CMakeFiles/cmTryCompileExec1325128048.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1325128048.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec1325128048.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:112:39: fatal error: CommonCrypto/CommonDigest.h: No such file or directory
 #include <CommonCrypto/CommonDigest.h>
                                       ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec1325128048.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec1325128048/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA384_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA384_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBSYSTEM failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3508444254/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3508444254.dir/build.make CMakeFiles/cmTryCompileExec3508444254.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3508444254.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3508444254.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:112:39: fatal error: CommonCrypto/CommonDigest.h: No such file or directory
 #include <CommonCrypto/CommonDigest.h>
                                       ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3508444254.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3508444254/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBSYSTEM
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_MD5_LIBMD failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3266831667/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3266831667.dir/build.make CMakeFiles/cmTryCompileExec3266831667.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3266831667.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3266831667.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:91:17: fatal error: md5.h: No such file or directory
 #include <md5.h>
                 ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3266831667.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3266831667/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_MD5_COMPILE_TEST
#define ARCHIVE_CRYPTO_MD5_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_RMD160_LIBMD failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3414346522/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3414346522.dir/build.make CMakeFiles/cmTryCompileExec3414346522.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3414346522.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3414346522.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:94:20: fatal error: ripemd.h: No such file or directory
 #include <ripemd.h>
                    ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3414346522.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3414346522/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_RMD160_COMPILE_TEST
#define ARCHIVE_CRYPTO_RMD160_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA1_LIBMD failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3165235141/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3165235141.dir/build.make CMakeFiles/cmTryCompileExec3165235141.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3165235141.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3165235141.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:97:17: fatal error: sha.h: No such file or directory
 #include <sha.h>
                 ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3165235141.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3165235141/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA1_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA1_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA256_LIBMD failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3589066896/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3589066896.dir/build.make CMakeFiles/cmTryCompileExec3589066896.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec3589066896.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec3589066896.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:100:20: fatal error: sha256.h: No such file or directory
 #include <sha256.h>
                    ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec3589066896.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec3589066896/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA256_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA256_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Checking support for ARCHIVE_CRYPTO_SHA512_LIBMD failed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1655995540/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1655995540.dir/build.make CMakeFiles/cmTryCompileExec1655995540.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1655995540.dir/check_crypto_md.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include  -w   -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive -I/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp    -o CMakeFiles/cmTryCompileExec1655995540.dir/check_crypto_md.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c
In file included from /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/check_crypto_md.c:36:0:
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Utilities/cmlibarchive/libarchive/archive_crypto_private.h:103:20: fatal error: sha512.h: No such file or directory
 #include <sha512.h>
                    ^
compilation terminated.
make[2]: *** [CMakeFiles/cmTryCompileExec1655995540.dir/check_crypto_md.c.o] Error 1
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: *** [cmTryCompileExec1655995540/fast] Error 2
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:

#define ARCHIVE_SHA512_COMPILE_TEST
#define ARCHIVE_CRYPTO_SHA512_LIBMD
#define PLATFORM_CONFIG_H "check_crypto_md.h"

/*-
* Copyright (c) 2003-2007 Tim Kientzle
* Copyright (c) 2011 Andres Mejia
* Copyright (c) 2011 Michihiro NAKAJIMA
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "archive_platform.h"

#include "archive.h"
#include "archive_crypto_private.h"

/* In particular, force the configure probe to break if it tries
 * to test a combination of OpenSSL and libmd. */
#if defined(ARCHIVE_CRYPTO_OPENSSL) && defined(ARCHIVE_CRYPTO_LIBMD)
#error Cannot use both OpenSSL and libmd.
#endif

/*
 * Message digest functions for Windows platform.
 */
#if defined(ARCHIVE_CRYPTO_MD5_WIN)    ||\
	defined(ARCHIVE_CRYPTO_SHA1_WIN)   ||\
	defined(ARCHIVE_CRYPTO_SHA256_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA384_WIN) ||\
	defined(ARCHIVE_CRYPTO_SHA512_WIN)

/*
 * Initialize a Message digest.
 */
static int
win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
{

	ctx->valid = 0;
	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
			return (ARCHIVE_FAILED);
		if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
		    PROV_RSA_FULL, CRYPT_NEWKEYSET))
			return (ARCHIVE_FAILED);
	}

	if (!CryptCreateHash(ctx->cryptProv, algId, 0, 0, &ctx->hash)) {
		CryptReleaseContext(ctx->cryptProv, 0);
		return (ARCHIVE_FAILED);
	}

	ctx->valid = 1;
	return (ARCHIVE_OK);
}

/*
 * Update a Message digest.
 */
static int
win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
{

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptHashData(ctx->hash,
		      (unsigned char *)(uintptr_t)buf,
		      (DWORD)len, 0);
	return (ARCHIVE_OK);
}

static int
win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
{
	DWORD siglen = bufsize;

	if (!ctx->valid)
		return (ARCHIVE_FAILED);

	CryptGetHashParam(ctx->hash, HP_HASHVAL, buf, &siglen, 0);
	CryptDestroyHash(ctx->hash);
	CryptReleaseContext(ctx->cryptProv, 0);
	ctx->valid = 0;
	return (ARCHIVE_OK);
}

#endif /* defined(ARCHIVE_CRYPTO_*_WIN) */


/* MD5 implementations */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)

static int
__archive_libc_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)

static int
__archive_libmd_md5init(archive_md5_ctx *ctx)
{
  MD5Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  MD5Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_md5final(archive_md5_ctx *ctx, void *md)
{
  MD5Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)

static int
__archive_libsystem_md5init(archive_md5_ctx *ctx)
{
  CC_MD5_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_MD5_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_md5final(archive_md5_ctx *ctx, void *md)
{
  CC_MD5_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)

static int
__archive_nettle_md5init(archive_md5_ctx *ctx)
{
  md5_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  md5_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_md5final(archive_md5_ctx *ctx, void *md)
{
  md5_digest(ctx, MD5_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)

static int
__archive_openssl_md5init(archive_md5_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_md5());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_md5final(archive_md5_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_MD5_WIN)

static int
__archive_windowsapi_md5init(archive_md5_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_MD5));
}

static int
__archive_windowsapi_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_md5final(archive_md5_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 16, ctx));
}

#else

static int
__archive_stub_md5init(archive_md5_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5update(archive_md5_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_md5final(archive_md5_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* RIPEMD160 implementations */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)

static int
__archive_libc_ripemd160init(archive_rmd160_ctx *ctx)
{
  RMD160Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RMD160Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RMD160Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)

static int
__archive_libmd_ripemd160init(archive_rmd160_ctx *ctx)
{
  RIPEMD160_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  RIPEMD160_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  RIPEMD160_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)

static int
__archive_nettle_ripemd160init(archive_rmd160_ctx *ctx)
{
  ripemd160_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  ripemd160_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  ripemd160_digest(ctx, RIPEMD160_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)

static int
__archive_openssl_ripemd160init(archive_rmd160_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_ripemd160());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#else

static int
__archive_stub_ripemd160init(archive_rmd160_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160update(archive_rmd160_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_ripemd160final(archive_rmd160_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA1 implementations */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)

static int
__archive_libc_sha1init(archive_sha1_ctx *ctx)
{
  SHA1Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)

static int
__archive_libmd_sha1init(archive_sha1_ctx *ctx)
{
  SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha1final(archive_sha1_ctx *ctx, void *md)
{
  SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)

static int
__archive_libsystem_sha1init(archive_sha1_ctx *ctx)
{
  CC_SHA1_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA1_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha1final(archive_sha1_ctx *ctx, void *md)
{
  CC_SHA1_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)

static int
__archive_nettle_sha1init(archive_sha1_ctx *ctx)
{
  sha1_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  sha1_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha1final(archive_sha1_ctx *ctx, void *md)
{
  sha1_digest(ctx, SHA1_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)

static int
__archive_openssl_sha1init(archive_sha1_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha1());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha1final(archive_sha1_ctx *ctx, void *md)
{
  /* HACK: archive_write_set_format_xar.c is finalizing empty contexts, so
   * this is meant to cope with that. Real fix is probably to fix
   * archive_write_set_format_xar.c
   */
  if (ctx->digest)
    EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)

static int
__archive_windowsapi_sha1init(archive_sha1_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA1));
}

static int
__archive_windowsapi_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha1final(archive_sha1_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 20, ctx));
}

#else

static int
__archive_stub_sha1init(archive_sha1_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1update(archive_sha1_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha1final(archive_sha1_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA256 implementations */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)

static int
__archive_libc_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)

static int
__archive_libc2_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)

static int
__archive_libc3_sha256init(archive_sha256_ctx *ctx)
{
  SHA256Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)

static int
__archive_libmd_sha256init(archive_sha256_ctx *ctx)
{
  SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha256final(archive_sha256_ctx *ctx, void *md)
{
  SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)

static int
__archive_libsystem_sha256init(archive_sha256_ctx *ctx)
{
  CC_SHA256_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA256_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha256final(archive_sha256_ctx *ctx, void *md)
{
  CC_SHA256_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)

static int
__archive_nettle_sha256init(archive_sha256_ctx *ctx)
{
  sha256_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  sha256_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha256final(archive_sha256_ctx *ctx, void *md)
{
  sha256_digest(ctx, SHA256_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)

static int
__archive_openssl_sha256init(archive_sha256_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha256());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha256final(archive_sha256_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)

static int
__archive_windowsapi_sha256init(archive_sha256_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_256));
}

static int
__archive_windowsapi_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha256final(archive_sha256_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 32, ctx));
}

#else

static int
__archive_stub_sha256init(archive_sha256_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256update(archive_sha256_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha256final(archive_sha256_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA384 implementations */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)

static int
__archive_libc_sha384init(archive_sha384_ctx *ctx)
{
  SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)

static int
__archive_libc2_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)

static int
__archive_libc3_sha384init(archive_sha384_ctx *ctx)
{
  SHA384Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA384Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha384final(archive_sha384_ctx *ctx, void *md)
{
  SHA384Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)

static int
__archive_libsystem_sha384init(archive_sha384_ctx *ctx)
{
  CC_SHA384_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA384_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha384final(archive_sha384_ctx *ctx, void *md)
{
  CC_SHA384_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)

static int
__archive_nettle_sha384init(archive_sha384_ctx *ctx)
{
  sha384_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  sha384_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha384final(archive_sha384_ctx *ctx, void *md)
{
  sha384_digest(ctx, SHA384_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)

static int
__archive_openssl_sha384init(archive_sha384_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha384());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha384final(archive_sha384_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)

static int
__archive_windowsapi_sha384init(archive_sha384_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_384));
}

static int
__archive_windowsapi_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha384final(archive_sha384_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 48, ctx));
}

#else

static int
__archive_stub_sha384init(archive_sha384_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384update(archive_sha384_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha384final(archive_sha384_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* SHA512 implementations */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)

static int
__archive_libc_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)

static int
__archive_libc2_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc2_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)

static int
__archive_libc3_sha512init(archive_sha512_ctx *ctx)
{
  SHA512Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libc3_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)

static int
__archive_libmd_sha512init(archive_sha512_ctx *ctx)
{
  SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libmd_sha512final(archive_sha512_ctx *ctx, void *md)
{
  SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)

static int
__archive_libsystem_sha512init(archive_sha512_ctx *ctx)
{
  CC_SHA512_Init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  CC_SHA512_Update(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_libsystem_sha512final(archive_sha512_ctx *ctx, void *md)
{
  CC_SHA512_Final(md, ctx);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)

static int
__archive_nettle_sha512init(archive_sha512_ctx *ctx)
{
  sha512_init(ctx);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  sha512_update(ctx, insize, indata);
  return (ARCHIVE_OK);
}

static int
__archive_nettle_sha512final(archive_sha512_ctx *ctx, void *md)
{
  sha512_digest(ctx, SHA512_DIGEST_SIZE, md);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)

static int
__archive_openssl_sha512init(archive_sha512_ctx *ctx)
{
  EVP_DigestInit(ctx, EVP_sha512());
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  EVP_DigestUpdate(ctx, indata, insize);
  return (ARCHIVE_OK);
}

static int
__archive_openssl_sha512final(archive_sha512_ctx *ctx, void *md)
{
  EVP_DigestFinal(ctx, md, NULL);
  return (ARCHIVE_OK);
}

#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)

static int
__archive_windowsapi_sha512init(archive_sha512_ctx *ctx)
{
  return (win_crypto_init(ctx, CALG_SHA_512));
}

static int
__archive_windowsapi_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
  return (win_crypto_Update(ctx, indata, insize));
}

static int
__archive_windowsapi_sha512final(archive_sha512_ctx *ctx, void *md)
{
  return (win_crypto_Final(md, 64, ctx));
}

#else

static int
__archive_stub_sha512init(archive_sha512_ctx *ctx)
{
	(void)ctx; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512update(archive_sha512_ctx *ctx, const void *indata,
    size_t insize)
{
	(void)ctx; /* UNUSED */
	(void)indata; /* UNUSED */
	(void)insize; /* UNUSED */
	return (ARCHIVE_FAILED);
}

static int
__archive_stub_sha512final(archive_sha512_ctx *ctx, void *md)
{
	(void)ctx; /* UNUSED */
	(void)md; /* UNUSED */
	return (ARCHIVE_FAILED);
}

#endif

/* NOTE: Crypto functions are set based on availability and by the following
 * order of preference.
 * 1. libc
 * 2. libc2
 * 3. libc3
 * 4. libSystem
 * 5. OpenSSL
 * 6. Windows API
 */
const struct archive_crypto __archive_crypto =
{
/* MD5 */
#if defined(ARCHIVE_CRYPTO_MD5_LIBC)
  &__archive_libc_md5init,
  &__archive_libc_md5update,
  &__archive_libc_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBMD)
  &__archive_libmd_md5init,
  &__archive_libmd_md5update,
  &__archive_libmd_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_LIBSYSTEM)
  &__archive_libsystem_md5init,
  &__archive_libsystem_md5update,
  &__archive_libsystem_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_NETTLE)
  &__archive_nettle_md5init,
  &__archive_nettle_md5update,
  &__archive_nettle_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_OPENSSL)
  &__archive_openssl_md5init,
  &__archive_openssl_md5update,
  &__archive_openssl_md5final,
#elif defined(ARCHIVE_CRYPTO_MD5_WIN)
  &__archive_windowsapi_md5init,
  &__archive_windowsapi_md5update,
  &__archive_windowsapi_md5final,
#elif !defined(ARCHIVE_MD5_COMPILE_TEST)
  &__archive_stub_md5init,
  &__archive_stub_md5update,
  &__archive_stub_md5final,
#endif

/* RIPEMD160 */
#if defined(ARCHIVE_CRYPTO_RMD160_LIBC)
  &__archive_libc_ripemd160init,
  &__archive_libc_ripemd160update,
  &__archive_libc_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_LIBMD)
  &__archive_libmd_ripemd160init,
  &__archive_libmd_ripemd160update,
  &__archive_libmd_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_NETTLE)
  &__archive_nettle_ripemd160init,
  &__archive_nettle_ripemd160update,
  &__archive_nettle_ripemd160final,
#elif defined(ARCHIVE_CRYPTO_RMD160_OPENSSL)
  &__archive_openssl_ripemd160init,
  &__archive_openssl_ripemd160update,
  &__archive_openssl_ripemd160final,
#elif !defined(ARCHIVE_RMD160_COMPILE_TEST)
  &__archive_stub_ripemd160init,
  &__archive_stub_ripemd160update,
  &__archive_stub_ripemd160final,
#endif

/* SHA1 */
#if defined(ARCHIVE_CRYPTO_SHA1_LIBC)
  &__archive_libc_sha1init,
  &__archive_libc_sha1update,
  &__archive_libc_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBMD)
  &__archive_libmd_sha1init,
  &__archive_libmd_sha1update,
  &__archive_libmd_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_LIBSYSTEM)
  &__archive_libsystem_sha1init,
  &__archive_libsystem_sha1update,
  &__archive_libsystem_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_NETTLE)
  &__archive_nettle_sha1init,
  &__archive_nettle_sha1update,
  &__archive_nettle_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_OPENSSL)
  &__archive_openssl_sha1init,
  &__archive_openssl_sha1update,
  &__archive_openssl_sha1final,
#elif defined(ARCHIVE_CRYPTO_SHA1_WIN)
  &__archive_windowsapi_sha1init,
  &__archive_windowsapi_sha1update,
  &__archive_windowsapi_sha1final,
#elif !defined(ARCHIVE_SHA1_COMPILE_TEST)
  &__archive_stub_sha1init,
  &__archive_stub_sha1update,
  &__archive_stub_sha1final,
#endif

/* SHA256 */
#if defined(ARCHIVE_CRYPTO_SHA256_LIBC)
  &__archive_libc_sha256init,
  &__archive_libc_sha256update,
  &__archive_libc_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC2)
  &__archive_libc2_sha256init,
  &__archive_libc2_sha256update,
  &__archive_libc2_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBC3)
  &__archive_libc3_sha256init,
  &__archive_libc3_sha256update,
  &__archive_libc3_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBMD)
  &__archive_libmd_sha256init,
  &__archive_libmd_sha256update,
  &__archive_libmd_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_LIBSYSTEM)
  &__archive_libsystem_sha256init,
  &__archive_libsystem_sha256update,
  &__archive_libsystem_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_NETTLE)
  &__archive_nettle_sha256init,
  &__archive_nettle_sha256update,
  &__archive_nettle_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_OPENSSL)
  &__archive_openssl_sha256init,
  &__archive_openssl_sha256update,
  &__archive_openssl_sha256final,
#elif defined(ARCHIVE_CRYPTO_SHA256_WIN)
  &__archive_windowsapi_sha256init,
  &__archive_windowsapi_sha256update,
  &__archive_windowsapi_sha256final,
#elif !defined(ARCHIVE_SHA256_COMPILE_TEST)
  &__archive_stub_sha256init,
  &__archive_stub_sha256update,
  &__archive_stub_sha256final,
#endif

/* SHA384 */
#if defined(ARCHIVE_CRYPTO_SHA384_LIBC)
  &__archive_libc_sha384init,
  &__archive_libc_sha384update,
  &__archive_libc_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC2)
  &__archive_libc2_sha384init,
  &__archive_libc2_sha384update,
  &__archive_libc2_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBC3)
  &__archive_libc3_sha384init,
  &__archive_libc3_sha384update,
  &__archive_libc3_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_LIBSYSTEM)
  &__archive_libsystem_sha384init,
  &__archive_libsystem_sha384update,
  &__archive_libsystem_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_NETTLE)
  &__archive_nettle_sha384init,
  &__archive_nettle_sha384update,
  &__archive_nettle_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_OPENSSL)
  &__archive_openssl_sha384init,
  &__archive_openssl_sha384update,
  &__archive_openssl_sha384final,
#elif defined(ARCHIVE_CRYPTO_SHA384_WIN)
  &__archive_windowsapi_sha384init,
  &__archive_windowsapi_sha384update,
  &__archive_windowsapi_sha384final,
#elif !defined(ARCHIVE_SHA384_COMPILE_TEST)
  &__archive_stub_sha384init,
  &__archive_stub_sha384update,
  &__archive_stub_sha384final,
#endif

/* SHA512 */
#if defined(ARCHIVE_CRYPTO_SHA512_LIBC)
  &__archive_libc_sha512init,
  &__archive_libc_sha512update,
  &__archive_libc_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC2)
  &__archive_libc2_sha512init,
  &__archive_libc2_sha512update,
  &__archive_libc2_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBC3)
  &__archive_libc3_sha512init,
  &__archive_libc3_sha512update,
  &__archive_libc3_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBMD)
  &__archive_libmd_sha512init,
  &__archive_libmd_sha512update,
  &__archive_libmd_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_LIBSYSTEM)
  &__archive_libsystem_sha512init,
  &__archive_libsystem_sha512update,
  &__archive_libsystem_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_NETTLE)
  &__archive_nettle_sha512init,
  &__archive_nettle_sha512update,
  &__archive_nettle_sha512final,
#elif defined(ARCHIVE_CRYPTO_SHA512_OPENSSL)
  &__archive_openssl_sha512init,
  &__archive_openssl_sha512update,
  &__archive_openssl_sha512final
#elif defined(ARCHIVE_CRYPTO_SHA512_WIN)
  &__archive_windowsapi_sha512init,
  &__archive_windowsapi_sha512update,
  &__archive_windowsapi_sha512final
#elif !defined(ARCHIVE_SHA512_COMPILE_TEST)
  &__archive_stub_sha512init,
  &__archive_stub_sha512update,
  &__archive_stub_sha512final
#endif
};


int
main(int argc, char **argv)
{
  archive__ctx ctx;
  archive__init(&ctx);
  archive__update(&ctx, *argv, argc);
  archive__final(&ctx, NULL);
  return 0;
}

Determining size of unsigned short passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1497837495/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1497837495.dir/build.make CMakeFiles/cmTryCompileExec1497837495.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1497837495.dir/CMAKE_SIZEOF_UNSIGNED_SHORT.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec1497837495.dir/CMAKE_SIZEOF_UNSIGNED_SHORT.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CheckTypeSize/CMAKE_SIZEOF_UNSIGNED_SHORT.c
Linking C executable cmTryCompileExec1497837495
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1497837495.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1497837495.dir/CMAKE_SIZEOF_UNSIGNED_SHORT.c.o  -o cmTryCompileExec1497837495 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the function wsyncup exists in the /usr/lib/i386-linux-gnu/libcurses.so passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec1712443772/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec1712443772.dir/build.make CMakeFiles/cmTryCompileExec1712443772.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec1712443772.dir/CheckFunctionExists.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DCHECK_FUNCTION_EXISTS=wsyncup   -o CMakeFiles/cmTryCompileExec1712443772.dir/CheckFunctionExists.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Modules/CheckFunctionExists.c
Linking C executable cmTryCompileExec1712443772
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1712443772.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include   -DCHECK_FUNCTION_EXISTS=wsyncup   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec1712443772.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1712443772 -rdynamic -lcurses 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Determining if the include file elf.h exists passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2233326426/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2233326426.dir/build.make CMakeFiles/cmTryCompileExec2233326426.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec2233326426.dir/CheckIncludeFile.c.o
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -o CMakeFiles/cmTryCompileExec2233326426.dir/CheckIncludeFile.c.o   -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTryCompileExec2233326426
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2233326426.dir/link.txt --verbose=1
/usr/bin/gcc   -O2 -I/home/aav/specter/buildroot-2013.08/output/host/usr/include      -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2233326426.dir/CheckIncludeFile.c.o  -o cmTryCompileExec2233326426 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'


Looking for a Fortran compiler passed with the following output:
Re-run cmake no build system arguments
-- The Fortran compiler identification is GNU
-- Check for working Fortran compiler: /usr/bin/f95
-- Check for working Fortran compiler: /usr/bin/f95  -- works
-- Detecting Fortran compiler ABI info
-- Detecting Fortran compiler ABI info - done
-- Checking whether /usr/bin/f95 supports Fortran 90
-- Checking whether /usr/bin/f95 supports Fortran 90 -- yes
-- Configuring done
-- Generating done
-- Build files have been written to: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Tests/CMakeFiles/CheckFortran

Determining if the Q_WS_X11 exist passed with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec2411555947/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec2411555947.dir/build.make CMakeFiles/cmTryCompileExec2411555947.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec2411555947.dir/CheckSymbolExists.cxx.o
/usr/bin/g++    -I/usr/include/qt4    -o CMakeFiles/cmTryCompileExec2411555947.dir/CheckSymbolExists.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx
Linking CXX executable cmTryCompileExec2411555947
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2411555947.dir/link.txt --verbose=1
/usr/bin/g++         -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec2411555947.dir/CheckSymbolExists.cxx.o  -o cmTryCompileExec2411555947 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

File /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <QtCore/qglobal.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef Q_WS_X11
  return ((int*)(&Q_WS_X11))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Performing C++ SOURCE FILE Test QT4_WORKS succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3861091706/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3861091706.dir/build.make CMakeFiles/cmTryCompileExec3861091706.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec3861091706.dir/src.cxx.o
/usr/bin/g++    -DQT4_WORKS -I/usr/include/qt4/QtDesigner -I/usr/include/qt4/QtDeclarative -I/usr/include/qt4/QtScriptTools -I/usr/include/qt4/QtDBus -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtSql -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtXmlPatterns -I/usr/include/qt4/QtWebKit -I/usr/include/qt4/QtHelp -I/usr/include/qt4/QtUiTools -I/usr/include/qt4/QtTest -I/usr/include/qt4/QtScript -I/usr/include/qt4/QtSvg -I/usr/include/qt4/Qt3Support -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtCore -I/usr/share/qt4/mkspecs/default -I/usr/include/qt4    -o CMakeFiles/cmTryCompileExec3861091706.dir/src.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.cxx
Linking CXX executable cmTryCompileExec3861091706
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3861091706.dir/link.txt --verbose=1
/usr/bin/g++      -DQT4_WORKS   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3861091706.dir/src.cxx.o  -o cmTryCompileExec3861091706 -rdynamic -lQtCore 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
#include <QCoreApplication>
 int main() {return (qApp == 0 ? 0 : 1); }

Performing C++ SOURCE FILE Test run_pic_test succeded with the following output:
Change Dir: /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec3660897114/fast"
make[1]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make -f CMakeFiles/cmTryCompileExec3660897114.dir/build.make CMakeFiles/cmTryCompileExec3660897114.dir/build
make[2]: Entering directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_progress_report /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/CMakeFiles 1
Building CXX object CMakeFiles/cmTryCompileExec3660897114.dir/src.cxx.o
/usr/bin/g++    -Drun_pic_test   -fPIE -o CMakeFiles/cmTryCompileExec3660897114.dir/src.cxx.o -c /home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp/src.cxx
Linking CXX executable cmTryCompileExec3660897114
/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/Bootstrap.cmk/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3660897114.dir/link.txt --verbose=1
/usr/bin/g++      -Drun_pic_test   -L/home/aav/specter/buildroot-2013.08/output/host/lib -L/home/aav/specter/buildroot-2013.08/output/host/usr/lib -Wl,-rpath,/home/aav/specter/buildroot-2013.08/output/host/usr/lib CMakeFiles/cmTryCompileExec3660897114.dir/src.cxx.o  -o cmTryCompileExec3660897114 -rdynamic 
make[2]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'
make[1]: Leaving directory `/home/aav/specter/buildroot-2013.08/output/build/host-cmake-2.8.10.2/CMakeFiles/CMakeTmp'

Source file was:
int main() { return 0;}
