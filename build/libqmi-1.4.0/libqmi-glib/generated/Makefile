# Makefile.in generated by automake 1.13.1 from Makefile.am.
# libqmi-glib/generated/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/libqmi
pkgincludedir = $(includedir)/libqmi
pkglibdir = $(libdir)/libqmi
pkglibexecdir = $(libexecdir)/libqmi
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabi
subdir = libqmi-glib/generated
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/compiler-warnings.m4 \
	$(top_srcdir)/m4/gtk-doc.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libqmi_glib_generated_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 =
am__objects_2 = libqmi_glib_generated_la-qmi-error-types.lo \
	libqmi_glib_generated_la-qmi-error-quarks.lo \
	libqmi_glib_generated_la-qmi-enum-types.lo \
	libqmi_glib_generated_la-qmi-enum-types-private.lo \
	libqmi_glib_generated_la-qmi-flags64-types.lo \
	libqmi_glib_generated_la-qmi-ctl.lo \
	libqmi_glib_generated_la-qmi-dms.lo \
	libqmi_glib_generated_la-qmi-nas.lo \
	libqmi_glib_generated_la-qmi-wds.lo \
	libqmi_glib_generated_la-qmi-wms.lo \
	libqmi_glib_generated_la-qmi-pds.lo
nodist_libqmi_glib_generated_la_OBJECTS = $(am__objects_1) \
	$(am__objects_2)
libqmi_glib_generated_la_OBJECTS =  \
	$(nodist_libqmi_glib_generated_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(nodist_libqmi_glib_generated_la_SOURCES)
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)"
HEADERS = $(nodist_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/arm-none-linux-gnueabi-ar
AUTOCONF = ${SHELL} /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0/missing autoconf
AUTOHEADER = ${SHELL} /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0/missing autoheader
AUTOMAKE = ${SHELL} /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0/missing automake-1.13
AWK = mawk
CC = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/ccache /home/aav/specter/buildroot-2013.08/output/host/usr/bin/arm-none-linux-gnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -std=gnu89 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os -pipe -Os  -Wmissing-declarations -Wmissing-prototypes -Wdeclaration-after-statement -Wstrict-prototypes -fno-strict-aliasing -Wno-deprecated-declarations -Wint-to-pointer-cast -Wfloat-equal -Wno-unused-parameter -Wno-sign-compare -Wunused-but-set-variable -Wundef -Wimplicit-function-declaration -Wpointer-arith -Winit-self -Wshadow -Wmissing-include-dirs -Waggregate-return -Wformat-security -Werror
CPP = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/arm-none-linux-gnueabi-cpp
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GLIB_MKENUMS = glib-mkenums
GREP = /bin/grep
GTKDOC_CHECK = 
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/arm-none-linux-gnueabi-ld
LDFLAGS = 
LIBOBJS = 
LIBQMI_GLIB_CFLAGS = -pthread -I/home/aav/specter/buildroot-2013.08/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/glib-2.0 -I/home/aav/specter/buildroot-2013.08/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib/glib-2.0/include  
LIBQMI_GLIB_LIBS = -lgio-2.0 -lgobject-2.0 -L/home/aav/specter/buildroot-2013.08/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lglib-2.0  
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/arm-none-linux-gnueabi-nm
NMEDIT = 
OBJDUMP = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/arm-none-linux-gnueabi-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libqmi
PACKAGE_BUGREPORT = libqmi-devel@lists.freedesktop.org
PACKAGE_NAME = libqmi
PACKAGE_STRING = libqmi 1.4.0
PACKAGE_TARNAME = libqmi
PACKAGE_URL = 
PACKAGE_VERSION = 1.4.0
PATH_SEPARATOR = :
PKG_CONFIG = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
QMICLI_CFLAGS = -pthread -I/home/aav/specter/buildroot-2013.08/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/glib-2.0 -I/home/aav/specter/buildroot-2013.08/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib/glib-2.0/include  
QMICLI_LIBS = -lgio-2.0 -lgobject-2.0 -L/home/aav/specter/buildroot-2013.08/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib -lglib-2.0  
RANLIB = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/arm-none-linux-gnueabi-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = /home/aav/specter/buildroot-2013.08/output/host/usr/bin/arm-none-linux-gnueabi-strip
VERSION = 1.4.0
abs_builddir = /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0/libqmi-glib/generated
abs_srcdir = /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0/libqmi-glib/generated
abs_top_builddir = /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0
abs_top_srcdir = /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = arm-buildroot-linux-gnueabi
host_alias = arm-buildroot-linux-gnueabi
host_cpu = arm
host_os = linux-gnueabi
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include/libqmi-glib
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/aav/specter/buildroot-2013.08/output/build/libqmi-1.4.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = arm-buildroot-linux-gnueabi
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LTLIBRARIES = libqmi-glib-generated.la
GENERATED_H = \
	qmi-error-types.h \
	qmi-enum-types.h \
	qmi-enum-types-private.h \
	qmi-flags64-types.h \
	qmi-ctl.h \
	qmi-dms.h \
	qmi-nas.h \
	qmi-wds.h \
	qmi-wms.h \
	qmi-pds.h

GENERATED_C = \
	qmi-error-types.c \
	qmi-error-quarks.c \
	qmi-enum-types.c \
	qmi-enum-types-private.c \
	qmi-flags64-types.c \
	qmi-ctl.c \
	qmi-dms.c \
	qmi-nas.c \
	qmi-wds.c \
	qmi-wms.c \
	qmi-pds.c

GENERATED_SECTIONS = \
	qmi-ctl.sections \
	qmi-dms.sections \
	qmi-nas.sections \
	qmi-wds.sections \
	qmi-wms.sections \
	qmi-pds.sections


# Enum/Flag types
ENUMS = \
	$(top_srcdir)/libqmi-glib/qmi-enums.h \
	$(top_srcdir)/libqmi-glib/qmi-enums-wds.h \
	$(top_srcdir)/libqmi-glib/qmi-enums-dms.h \
	$(top_srcdir)/libqmi-glib/qmi-enums-nas.h \
	$(top_srcdir)/libqmi-glib/qmi-enums-wms.h \
	$(top_srcdir)/libqmi-glib/qmi-enums-pds.h


# Private Enum/Flag types
PRIVATE_ENUMS = \
	$(top_srcdir)/libqmi-glib/qmi-enums-private.h


# 64bit flag types
FLAGS64 = $(top_srcdir)/libqmi-glib/qmi-flags64-dms.h $(top_srcdir)/libqmi-glib/qmi-flags64-nas.h
BUILT_SOURCES = $(GENERATED_H) $(GENERATED_C)
nodist_libqmi_glib_generated_la_SOURCES = \
	$(GENERATED_H) \
	$(GENERATED_C)

libqmi_glib_generated_la_CPPFLAGS = \
	$(LIBQMI_GLIB_CFLAGS) \
	-I$(top_srcdir) \
	-I$(top_srcdir)/libqmi-glib \
	-DLIBQMI_GLIB_COMPILATION \
	-DG_LOG_DOMAIN=\"Qmi\" \
	-Wno-unused-function

libqmi_glib_generated_la_LIBADD = \
	$(LIBQMI_GLIB_LIBS)

nodist_include_HEADERS = \
	qmi-error-types.h \
	qmi-enum-types.h \
	qmi-flags64-types.h \
	qmi-dms.h \
	qmi-nas.h \
	qmi-wds.h \
	qmi-wms.h \
	qmi-pds.h

CLEANFILES = $(GENERATED_H) $(GENERATED_C) $(GENERATED_SECTIONS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libqmi-glib/generated/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libqmi-glib/generated/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
libqmi-glib-generated.la: $(libqmi_glib_generated_la_OBJECTS) $(libqmi_glib_generated_la_DEPENDENCIES) $(EXTRA_libqmi_glib_generated_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libqmi_glib_generated_la_OBJECTS) $(libqmi_glib_generated_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-ctl.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-dms.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-enum-types-private.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-enum-types.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-error-quarks.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-error-types.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-flags64-types.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-nas.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-pds.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-wds.Plo
include ./$(DEPDIR)/libqmi_glib_generated_la-qmi-wms.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libqmi_glib_generated_la-qmi-error-types.lo: qmi-error-types.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-error-types.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-error-types.Tpo -c -o libqmi_glib_generated_la-qmi-error-types.lo `test -f 'qmi-error-types.c' || echo '$(srcdir)/'`qmi-error-types.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-error-types.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-error-types.Plo
#	$(AM_V_CC)source='qmi-error-types.c' object='libqmi_glib_generated_la-qmi-error-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-error-types.lo `test -f 'qmi-error-types.c' || echo '$(srcdir)/'`qmi-error-types.c

libqmi_glib_generated_la-qmi-error-quarks.lo: qmi-error-quarks.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-error-quarks.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-error-quarks.Tpo -c -o libqmi_glib_generated_la-qmi-error-quarks.lo `test -f 'qmi-error-quarks.c' || echo '$(srcdir)/'`qmi-error-quarks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-error-quarks.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-error-quarks.Plo
#	$(AM_V_CC)source='qmi-error-quarks.c' object='libqmi_glib_generated_la-qmi-error-quarks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-error-quarks.lo `test -f 'qmi-error-quarks.c' || echo '$(srcdir)/'`qmi-error-quarks.c

libqmi_glib_generated_la-qmi-enum-types.lo: qmi-enum-types.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-enum-types.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-enum-types.Tpo -c -o libqmi_glib_generated_la-qmi-enum-types.lo `test -f 'qmi-enum-types.c' || echo '$(srcdir)/'`qmi-enum-types.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-enum-types.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-enum-types.Plo
#	$(AM_V_CC)source='qmi-enum-types.c' object='libqmi_glib_generated_la-qmi-enum-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-enum-types.lo `test -f 'qmi-enum-types.c' || echo '$(srcdir)/'`qmi-enum-types.c

libqmi_glib_generated_la-qmi-enum-types-private.lo: qmi-enum-types-private.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-enum-types-private.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-enum-types-private.Tpo -c -o libqmi_glib_generated_la-qmi-enum-types-private.lo `test -f 'qmi-enum-types-private.c' || echo '$(srcdir)/'`qmi-enum-types-private.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-enum-types-private.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-enum-types-private.Plo
#	$(AM_V_CC)source='qmi-enum-types-private.c' object='libqmi_glib_generated_la-qmi-enum-types-private.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-enum-types-private.lo `test -f 'qmi-enum-types-private.c' || echo '$(srcdir)/'`qmi-enum-types-private.c

libqmi_glib_generated_la-qmi-flags64-types.lo: qmi-flags64-types.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-flags64-types.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-flags64-types.Tpo -c -o libqmi_glib_generated_la-qmi-flags64-types.lo `test -f 'qmi-flags64-types.c' || echo '$(srcdir)/'`qmi-flags64-types.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-flags64-types.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-flags64-types.Plo
#	$(AM_V_CC)source='qmi-flags64-types.c' object='libqmi_glib_generated_la-qmi-flags64-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-flags64-types.lo `test -f 'qmi-flags64-types.c' || echo '$(srcdir)/'`qmi-flags64-types.c

libqmi_glib_generated_la-qmi-ctl.lo: qmi-ctl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-ctl.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-ctl.Tpo -c -o libqmi_glib_generated_la-qmi-ctl.lo `test -f 'qmi-ctl.c' || echo '$(srcdir)/'`qmi-ctl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-ctl.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-ctl.Plo
#	$(AM_V_CC)source='qmi-ctl.c' object='libqmi_glib_generated_la-qmi-ctl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-ctl.lo `test -f 'qmi-ctl.c' || echo '$(srcdir)/'`qmi-ctl.c

libqmi_glib_generated_la-qmi-dms.lo: qmi-dms.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-dms.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-dms.Tpo -c -o libqmi_glib_generated_la-qmi-dms.lo `test -f 'qmi-dms.c' || echo '$(srcdir)/'`qmi-dms.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-dms.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-dms.Plo
#	$(AM_V_CC)source='qmi-dms.c' object='libqmi_glib_generated_la-qmi-dms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-dms.lo `test -f 'qmi-dms.c' || echo '$(srcdir)/'`qmi-dms.c

libqmi_glib_generated_la-qmi-nas.lo: qmi-nas.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-nas.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-nas.Tpo -c -o libqmi_glib_generated_la-qmi-nas.lo `test -f 'qmi-nas.c' || echo '$(srcdir)/'`qmi-nas.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-nas.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-nas.Plo
#	$(AM_V_CC)source='qmi-nas.c' object='libqmi_glib_generated_la-qmi-nas.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-nas.lo `test -f 'qmi-nas.c' || echo '$(srcdir)/'`qmi-nas.c

libqmi_glib_generated_la-qmi-wds.lo: qmi-wds.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-wds.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-wds.Tpo -c -o libqmi_glib_generated_la-qmi-wds.lo `test -f 'qmi-wds.c' || echo '$(srcdir)/'`qmi-wds.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-wds.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-wds.Plo
#	$(AM_V_CC)source='qmi-wds.c' object='libqmi_glib_generated_la-qmi-wds.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-wds.lo `test -f 'qmi-wds.c' || echo '$(srcdir)/'`qmi-wds.c

libqmi_glib_generated_la-qmi-wms.lo: qmi-wms.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-wms.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-wms.Tpo -c -o libqmi_glib_generated_la-qmi-wms.lo `test -f 'qmi-wms.c' || echo '$(srcdir)/'`qmi-wms.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-wms.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-wms.Plo
#	$(AM_V_CC)source='qmi-wms.c' object='libqmi_glib_generated_la-qmi-wms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-wms.lo `test -f 'qmi-wms.c' || echo '$(srcdir)/'`qmi-wms.c

libqmi_glib_generated_la-qmi-pds.lo: qmi-pds.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libqmi_glib_generated_la-qmi-pds.lo -MD -MP -MF $(DEPDIR)/libqmi_glib_generated_la-qmi-pds.Tpo -c -o libqmi_glib_generated_la-qmi-pds.lo `test -f 'qmi-pds.c' || echo '$(srcdir)/'`qmi-pds.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libqmi_glib_generated_la-qmi-pds.Tpo $(DEPDIR)/libqmi_glib_generated_la-qmi-pds.Plo
#	$(AM_V_CC)source='qmi-pds.c' object='libqmi_glib_generated_la-qmi-pds.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libqmi_glib_generated_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libqmi_glib_generated_la-qmi-pds.lo `test -f 'qmi-pds.c' || echo '$(srcdir)/'`qmi-pds.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nodist_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-nodist_includeHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-nodist_includeHEADERS \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-nodist_includeHEADERS


# Error types
qmi-error-types.h: $(top_srcdir)/libqmi-glib/qmi-errors.h $(top_srcdir)/build-aux/templates/qmi-error-types-template.h
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#ifndef __LIBQMI_GLIB_ERROR_TYPES_H__\n#define __LIBQMI_GLIB_ERROR_TYPES_H__\n#include \"qmi-errors.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-error-types-template.h \
		--ftail "#endif /* __LIBQMI_GLIB_ERROR_TYPES_H__ */\n" \
		$(top_srcdir)/libqmi-glib/qmi-errors.h > $@

qmi-error-types.c: $(top_srcdir)/libqmi-glib/qmi-errors.h qmi-error-types.h $(top_srcdir)/build-aux/templates/qmi-error-types-template.c
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#include \"qmi-errors.h\"\n#include \"qmi-error-types.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-error-types-template.c \
		$(top_srcdir)/libqmi-glib/qmi-errors.h > $@

qmi-error-quarks.c: $(top_srcdir)/libqmi-glib/qmi-errors.h qmi-error-types.h $(top_srcdir)/build-aux/templates/qmi-error-quarks-template.c
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#include \"qmi-errors.h\"\n#include \"qmi-error-types.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-error-quarks-template.c \
		$(top_srcdir)/libqmi-glib/qmi-errors.h > $@
qmi-enum-types.h:  $(ENUMS) $(top_srcdir)/build-aux/templates/qmi-enum-types-template.h
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#ifndef __LIBQMI_GLIB_ENUM_TYPES_H__\n#define __LIBQMI_GLIB_ENUM_TYPES_H__\n#include \"qmi-enums.h\"\n#include \"qmi-enums-wds.h\"\n#include \"qmi-enums-dms.h\"\n#include \"qmi-enums-nas.h\"\n#include \"qmi-enums-wms.h\"\n#include \"qmi-enums-pds.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-enum-types-template.h \
		--ftail "#endif /* __LIBQMI_GLIB_ENUM_TYPES_H__ */\n" \
		$(ENUMS) > $@

qmi-enum-types.c: $(ENUMS) qmi-enum-types.h $(top_srcdir)/build-aux/templates/qmi-enum-types-template.c
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#include \"qmi-enum-types.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-enum-types-template.c \
		$(ENUMS) > $@
qmi-enum-types-private.h:  $(PRIVATE_ENUMS) $(top_srcdir)/build-aux/templates/qmi-enum-types-template.h
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#ifndef __LIBQMI_GLIB_ENUM_TYPES_PRIVATE_H__\n#define __LIBQMI_GLIB_ENUM_TYPES_PRIVATE_H__\n#include \"qmi-enums-private.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-enum-types-template.h \
		--ftail "#endif /* __LIBQMI_GLIB_ENUM_TYPES_PRIVATE_H__ */\n" \
		$(PRIVATE_ENUMS) > $@

qmi-enum-types-private.c: $(PRIVATE_ENUMS) qmi-enum-types-private.h $(top_srcdir)/build-aux/templates/qmi-enum-types-template.c
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#include \"qmi-enum-types-private.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-enum-types-template.c \
		$(PRIVATE_ENUMS) > $@
qmi-flags64-types.h:  $(FLAGS64) $(top_srcdir)/build-aux/templates/qmi-flags64-types-template.h
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#ifndef __LIBQMI_GLIB_FLAGS64_TYPES_H__\n#define __LIBQMI_GLIB_FLAGS64_TYPES_H__\n#include \"qmi-flags64-dms.h\"\n#include \"qmi-flags64-nas.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-flags64-types-template.h \
		--ftail "#endif /* __LIBQMI_GLIB_FLAGS64_TYPES_H__ */\n" \
		$(FLAGS64) > $@

qmi-flags64-types.c: $(FLAGS64) qmi-flags64-types.h $(top_srcdir)/build-aux/templates/qmi-flags64-types-template.c
	$(AM_V_GEN) $(GLIB_MKENUMS) \
		--fhead "#include \"qmi-flags64-types.h\"\n" \
		--template $(top_srcdir)/build-aux/templates/qmi-flags64-types-template.c \
		$(FLAGS64) > $@

# CTL service
qmi-ctl.h qmi-ctl.c qmi-ctl.sections: $(top_srcdir)/data/qmi-service-ctl.json $(top_srcdir)/build-aux/qmi-codegen/*.py $(top_srcdir)/build-aux/qmi-codegen/qmi-codegen
	$(AM_V_GEN)  \
		rm -f qmi-ctl.h && \
		rm -f qmi-ctl.c && \
		$(top_srcdir)/build-aux/qmi-codegen/qmi-codegen \
			--input $(top_srcdir)/data/qmi-service-ctl.json \
			--include $(top_srcdir)/data/qmi-common.json \
			--output qmi-ctl

# DMS service
qmi-dms.h qmi-dms.c qmi-dms.sections: $(top_srcdir)/data/qmi-service-dms.json $(top_srcdir)/build-aux/qmi-codegen/*.py $(top_srcdir)/build-aux/qmi-codegen/qmi-codegen
	$(AM_V_GEN) \
		rm -f qmi-dms.h && \
		rm -f qmi-dms.c && \
		 $(top_srcdir)/build-aux/qmi-codegen/qmi-codegen \
			--input $(top_srcdir)/data/qmi-service-dms.json \
			--include $(top_srcdir)/data/qmi-common.json \
			--output qmi-dms

# WDS service
qmi-wds.h qmi-wds.c qmi-wds.sections: $(top_srcdir)/data/qmi-service-wds.json $(top_srcdir)/build-aux/qmi-codegen/*.py $(top_srcdir)/build-aux/qmi-codegen/qmi-codegen
	$(AM_V_GEN) \
		rm -f qmi-wds.h && \
		rm -f qmi-wds.c && \
		$(top_srcdir)/build-aux/qmi-codegen/qmi-codegen \
			--input $(top_srcdir)/data/qmi-service-wds.json \
			--include $(top_srcdir)/data/qmi-common.json \
			--output qmi-wds

# NAS service
qmi-nas.h qmi-nas.c qmi-nas.sections: $(top_srcdir)/data/qmi-service-nas.json $(top_srcdir)/build-aux/qmi-codegen/*.py $(top_srcdir)/build-aux/qmi-codegen/qmi-codegen
	$(AM_V_GEN) \
		rm -f qmi-nas.h && \
		rm -f qmi-nas.c && \
		$(top_srcdir)/build-aux/qmi-codegen/qmi-codegen \
			--input $(top_srcdir)/data/qmi-service-nas.json \
			--include $(top_srcdir)/data/qmi-common.json \
			--output qmi-nas

# WMS service
qmi-wms.h qmi-wms.c qmi-wms.sections: $(top_srcdir)/data/qmi-service-wms.json $(top_srcdir)/build-aux/qmi-codegen/*.py $(top_srcdir)/build-aux/qmi-codegen/qmi-codegen
	$(AM_V_GEN) \
		rm -f qmi-wms.h && \
		rm -f qmi-wms.c && \
		$(top_srcdir)/build-aux/qmi-codegen/qmi-codegen \
			--input $(top_srcdir)/data/qmi-service-wms.json \
			--include $(top_srcdir)/data/qmi-common.json \
			--output qmi-wms

# PDS service
qmi-pds.h qmi-pds.c qmi-pds.sections: $(top_srcdir)/data/qmi-service-pds.json $(top_srcdir)/build-aux/qmi-codegen/*.py $(top_srcdir)/build-aux/qmi-codegen/qmi-codegen
	$(AM_V_GEN) \
		rm -f qmi-pds.h && \
		rm -f qmi-pds.c && \
		$(top_srcdir)/build-aux/qmi-codegen/qmi-codegen \
			--input $(top_srcdir)/data/qmi-service-pds.json \
			--include $(top_srcdir)/data/qmi-common.json \
			--output qmi-pds

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
